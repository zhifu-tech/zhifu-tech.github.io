<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Zhifu-Tech</title>
  
  <subtitle>技术分享与创新实践</subtitle>
  <link href="https://zhifu-tech.github.io/atom.xml" rel="self"/>
  
  <link href="https://zhifu-tech.github.io/"/>
  <updated>2025-10-17T01:30:21.000Z</updated>
  <id>https://zhifu-tech.github.io/</id>
  
  <author>
    <name>zhifu(geo)</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Rust 系统编程语言指南</title>
    <link href="https://zhifu-tech.github.io/2025/10/17/rust-programming-language/"/>
    <id>https://zhifu-tech.github.io/2025/10/17/rust-programming-language/</id>
    <published>2025-10-17T01:30:21.000Z</published>
    <updated>2025-10-17T01:30:21.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Rust-语言"><a href="#Rust-语言" class="headerlink" title="Rust 语言"></a><span class="exturl" data-url="aHR0cHM6Ly9ydXN0LWxhbmcub3JnLw==">Rust 语言<i class="fa fa-external-link-alt"></i></span></h2><p>Rust是一门系统编程语言，由Mozilla开发，专注于安全性、速度和并发性。它通过所有权系统在编译时防止内存错误，无需垃圾回收器即可保证内存安全。</p><h3 id="🚀-核心特性"><a href="#🚀-核心特性" class="headerlink" title="🚀 核心特性"></a>🚀 核心特性</h3><ul><li><p><strong>🔒 内存安全</strong></p><ul><li>零成本抽象：无需运行时开销即可获得内存安全</li><li>所有权系统：编译时防止数据竞争和内存泄漏</li><li>借用检查器：确保引用始终有效</li></ul></li><li><p><strong>⚡ 性能卓越</strong></p><ul><li>接近C&#x2F;C++的执行速度</li><li>无垃圾回收器，确定性内存管理</li><li>零成本抽象，高级特性不产生运行时开销</li></ul></li><li><p><strong>🔄 并发安全</strong></p><ul><li>内置并发原语，防止数据竞争</li><li>异步编程支持，高并发处理能力</li><li>线程安全的数据结构</li></ul></li><li><p><strong>✨ 现代语言特性</strong></p><ul><li>模式匹配和代数数据类型</li><li>函数式编程特性</li><li>强大的类型系统</li><li>包管理和构建工具Cargo</li></ul></li></ul><h3 id="🎯-应用领域"><a href="#🎯-应用领域" class="headerlink" title="🎯 应用领域"></a>🎯 应用领域</h3><ul><li><strong>💻 系统编程</strong>：操作系统、驱动程序、嵌入式系统</li><li><strong>🌐 Web后端</strong>：高性能API服务器</li><li><strong>⛓️ 区块链</strong>：加密货币和智能合约</li><li><strong>🎮 游戏开发</strong>：游戏引擎和工具</li><li><strong>🔧 WebAssembly</strong>：浏览器和边缘计算</li><li><strong>⌨️ 命令行工具</strong>：替代C&#x2F;C++的系统工具</li></ul><h3 id="📚-学习优势"><a href="#📚-学习优势" class="headerlink" title="📚 学习优势"></a>📚 学习优势</h3><ul><li><strong>🛡️ 安全性</strong>：编译时捕获常见错误</li><li><strong>⚡ 性能</strong>：系统级性能，无垃圾回收开销</li><li><strong>✨ 现代性</strong>：丰富的语言特性和工具链</li><li><strong>🌱 生态</strong>：活跃的社区和丰富的crate库</li><li><strong>🚀 未来性</strong>：被大公司广泛采用，前景广阔</li></ul><h3 id="🔗-资源链接"><a href="#🔗-资源链接" class="headerlink" title="🔗 资源链接"></a>🔗 资源链接</h3><ol><li><p><span class="exturl" data-url="aHR0cHM6Ly9kb2MucnVzdC1sYW5nLm9yZy9ib29rLw==">《Rust 程序设计语言》<i class="fa fa-external-link-alt"></i></span></p><blockquote><p>《Rust 程序设计语言》被亲切地称为&quot;圣经&quot;。本书从基本原则出发，给出了 Rust 语言的概览。您将在阅读本书的过程中构建几个项目，读完本书后，您就能扎实地掌握 Rust 语言。</p></blockquote></li><li><p><span class="exturl" data-url="aHR0cHM6Ly9ydXN0LWxhbmcub3JnL3poLUNOL2NvbW11bml0eS8=">Rust 社区<i class="fa fa-external-link-alt"></i></span></p><blockquote><p>Rust官方社区，提供学习资源、用户论坛、开发者工具和活动信息。是Rust开发者交流、学习和获取帮助的重要平台。</p></blockquote></li><li><p><span class="exturl" data-url="aHR0cHM6Ly9jcmF0ZXMuaW8v">Crates.io<i class="fa fa-external-link-alt"></i></span></p><blockquote><p>Rust的官方包注册中心，类似于npm之于Node.js。提供超过10万个开源crate包，是Rust生态系统的重要组成部分，支持依赖管理和版本控制。</p></blockquote></li></ol>]]></content>
    
    
    <summary type="html">Rust系统编程语言的详细介绍，包括核心特性、应用领域、学习优势等。Rust专注于安全性、速度和并发性，通过所有权系统在编译时防止内存错误。</summary>
    
    
    
    <category term="编程语言" scheme="https://zhifu-tech.github.io/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
    <category term="编程语言" scheme="https://zhifu-tech.github.io/tags/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    <category term="Rust" scheme="https://zhifu-tech.github.io/tags/Rust/"/>
    
    <category term="系统编程" scheme="https://zhifu-tech.github.io/tags/%E7%B3%BB%E7%BB%9F%E7%BC%96%E7%A8%8B/"/>
    
    <category term="内存安全" scheme="https://zhifu-tech.github.io/tags/%E5%86%85%E5%AD%98%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>TOML 配置文件格式指南</title>
    <link href="https://zhifu-tech.github.io/2025/10/17/toml-configuration-format/"/>
    <id>https://zhifu-tech.github.io/2025/10/17/toml-configuration-format/</id>
    <published>2025-10-17T01:30:21.000Z</published>
    <updated>2025-10-17T01:30:21.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="TOML-Tom-s-Obvious-Minimal-Language"><a href="#TOML-Tom-s-Obvious-Minimal-Language" class="headerlink" title="TOML, Tom&#39;s Obvious, Minimal Language"></a><span class="exturl" data-url="aHR0cHM6Ly90b21sLmlvLw==">TOML, Tom&#39;s Obvious, Minimal Language<i class="fa fa-external-link-alt"></i></span></h2><p>TOML是一种配置文件格式，由Tom Preston-Werner设计，旨在成为&quot;明显的最小语言&quot;。它强调可读性，使用简洁的语法来表达配置信息，被广泛用于项目配置、包管理和应用程序设置。</p><h3 id="🚀-核心特性"><a href="#🚀-核心特性" class="headerlink" title="🚀 核心特性"></a>🚀 核心特性</h3><ul><li><p><strong>📖 可读性强</strong></p><ul><li>人类友好的语法，易于阅读和编写</li><li>清晰的层次结构，支持嵌套配置</li><li>直观的数据类型表示</li></ul></li><li><p><strong>🛡️ 类型安全</strong></p><ul><li>支持字符串、整数、浮点数、布尔值</li><li>日期时间、数组、表格等复合类型</li><li>严格的类型检查，避免配置错误</li></ul></li><li><p><strong>✨ 简洁明了</strong></p><ul><li>最小化语法，减少学习成本</li><li>无冗余符号，配置简洁</li><li>注释支持，便于文档化</li></ul></li><li><p><strong>🌐 广泛支持</strong></p><ul><li>多语言解析器支持</li><li>标准化规范，确保兼容性</li><li>活跃的社区维护</li></ul></li></ul><h3 id="🎯-应用领域"><a href="#🎯-应用领域" class="headerlink" title="🎯 应用领域"></a>🎯 应用领域</h3><ul><li><strong>⚙️ 项目配置</strong>：Cargo.toml、pyproject.toml等</li><li><strong>📦 包管理</strong>：Rust Cargo、Python Poetry</li><li><strong>🔄 CI&#x2F;CD</strong>：GitHub Actions、GitLab CI配置</li><li><strong>🔧 应用设置</strong>：数据库连接、API配置</li><li><strong>🌐 静态站点</strong>：Hugo、Jekyll等静态站点生成器</li><li><strong>🐳 容器编排</strong>：Docker Compose配置</li></ul><h3 id="📚-学习优势"><a href="#📚-学习优势" class="headerlink" title="📚 学习优势"></a>📚 学习优势</h3><ul><li><strong>🎯 易学易用</strong>：语法简单，快速上手</li><li><strong>👁️ 可读性</strong>：配置文件一目了然</li><li><strong>📏 标准化</strong>：统一的配置格式</li><li><strong>🛠️ 工具支持</strong>：丰富的编辑器和工具</li><li><strong>🔄 替代方案</strong>：相比JSON更易读，相比YAML更简单</li></ul><h3 id="🔗-资源链接"><a href="#🔗-资源链接" class="headerlink" title="🔗 资源链接"></a>🔗 资源链接</h3><ol><li><span class="exturl" data-url="aHR0cHM6Ly90b21sLmlvL2NuLw==">TOML 官方文档<i class="fa fa-external-link-alt"></i></span></li><li><span class="exturl" data-url="aHR0cHM6Ly90b21sLmlvL2NuL3YxLjAuMA==">TOML 规范<i class="fa fa-external-link-alt"></i></span></li><li><span class="exturl" data-url="aHR0cHM6Ly90b21sLmlvL2NuL3RvbWwtZWRpdA==">TOML 在线编辑器<i class="fa fa-external-link-alt"></i></span></li></ol>]]></content>
    
    
    <summary type="html">TOML配置文件格式的详细介绍，包括核心特性、应用领域、学习优势等。TOML是一种人类友好的配置文件格式，强调可读性和简洁性。</summary>
    
    
    
    <category term="工具" scheme="https://zhifu-tech.github.io/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="工具" scheme="https://zhifu-tech.github.io/tags/%E5%B7%A5%E5%85%B7/"/>
    
    <category term="配置文件" scheme="https://zhifu-tech.github.io/tags/%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/"/>
    
    <category term="TOML" scheme="https://zhifu-tech.github.io/tags/TOML/"/>
    
    <category term="格式" scheme="https://zhifu-tech.github.io/tags/%E6%A0%BC%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>笔记: 万维钢-精英日课6-问答：数量重要还是想法重要</title>
    <link href="https://zhifu-tech.github.io/2025/10/15/%E4%B8%87%E7%BB%B4%E9%92%A2-%E7%B2%BE%E8%8B%B1%E6%97%A5%E8%AF%BE6-%E9%97%AE%E7%AD%94%EF%BC%9A%E6%95%B0%E9%87%8F%E9%87%8D%E8%A6%81%E8%BF%98%E6%98%AF%E6%83%B3%E6%B3%95%E9%87%8D%E8%A6%81/"/>
    <id>https://zhifu-tech.github.io/2025/10/15/%E4%B8%87%E7%BB%B4%E9%92%A2-%E7%B2%BE%E8%8B%B1%E6%97%A5%E8%AF%BE6-%E9%97%AE%E7%AD%94%EF%BC%9A%E6%95%B0%E9%87%8F%E9%87%8D%E8%A6%81%E8%BF%98%E6%98%AF%E6%83%B3%E6%B3%95%E9%87%8D%E8%A6%81/</id>
    <published>2025-10-15T04:23:20.000Z</published>
    <updated>2025-10-15T04:23:20.000Z</updated>
    
    <content type="html"><![CDATA[<ol><li>严歌苓是如何写作的 ？<ul><li>每天只写四小时：上午九点到下午一点，然后下午可能读读书；</li><li>写不下去要强行写，不要等待灵感，灵气是写的时候自发冒出来的；</li><li>一到点就停，给第二天的自己留个字条说明到时候怎么写；</li><li>第二天会先修改前一天写的，修改之后的情节又自动展开，往往违背昨天的字条；</li><li>如果一本书写一半中断了，间隔很长时间不写，将来想要回来接着写诗非常困难的，因为流动停止了。</li></ul></li><li>严歌苓：作者只能掌控小说开始的部分，一旦开了头，任务就会自动展开他们自己的命运，之后作者就是跟着他们的故事流淌，并为之深深感动，而已。</li><li>好故事自动流淌的两个‘高级功夫’<ul><li>世界模拟器：给你一个设定，你知道接下来会发生什么，能模拟真实世界的运转；</li><li>识别器：能识别到你模拟的这个世界中哪些是不寻常的地方，哪些是特别有意思、有趣味，值得我们去好好欣赏的东西。</li></ul></li><li>对真实世界要有自己的感知。</li><li>让作家厉害的并不是禁烟和描写的准确性，而是独特滤镜，这个滤镜来自亲身经历、阅读，是慢慢长在作家脑子里的，不是临时调用的</li></ol>]]></content>
    
    
    <summary type="html">学习笔记：万维钢-精英日课6-问答：数量重要还是想法重要</summary>
    
    
    
    <category term="学习笔记" scheme="https://zhifu-tech.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="笔记" scheme="https://zhifu-tech.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="学习" scheme="https://zhifu-tech.github.io/tags/%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="万维钢-精英日课6" scheme="https://zhifu-tech.github.io/tags/%E4%B8%87%E7%BB%B4%E9%92%A2-%E7%B2%BE%E8%8B%B1%E6%97%A5%E8%AF%BE6/"/>
    
    <category term="万维钢-精英日课" scheme="https://zhifu-tech.github.io/tags/%E4%B8%87%E7%BB%B4%E9%92%A2-%E7%B2%BE%E8%8B%B1%E6%97%A5%E8%AF%BE/"/>
    
    <category term="万维钢" scheme="https://zhifu-tech.github.io/tags/%E4%B8%87%E7%BB%B4%E9%92%A2/"/>
    
  </entry>
  
  <entry>
    <title>笔记: 万维钢-精英日课6-现实的七个可能性</title>
    <link href="https://zhifu-tech.github.io/2025/10/15/%E4%B8%87%E7%BB%B4%E9%92%A2-%E7%B2%BE%E8%8B%B1%E6%97%A5%E8%AF%BE6-%E7%8E%B0%E5%AE%9E%E7%9A%84%E4%B8%83%E4%B8%AA%E5%8F%AF%E8%83%BD%E6%80%A7/"/>
    <id>https://zhifu-tech.github.io/2025/10/15/%E4%B8%87%E7%BB%B4%E9%92%A2-%E7%B2%BE%E8%8B%B1%E6%97%A5%E8%AF%BE6-%E7%8E%B0%E5%AE%9E%E7%9A%84%E4%B8%83%E4%B8%AA%E5%8F%AF%E8%83%BD%E6%80%A7/</id>
    <published>2025-10-15T03:14:26.000Z</published>
    <updated>2025-10-15T03:14:26.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="📖-核心观点"><a href="#📖-核心观点" class="headerlink" title="📖 核心观点"></a>📖 核心观点</h2><ul><li>科学告诉我们世界是如何运行的，但不回答世界为什么存在，也不关心世界的本质是什么。</li><li><strong>科学不能解释的东西，恰恰是哲学最后的领地。</strong></li></ul><h2 id="🌍的四个基本性质"><a href="#🌍的四个基本性质" class="headerlink" title="🌍的四个基本性质"></a>🌍的四个基本性质</h2><ol><li><strong>世界是讲理的 - 事物不会凭空消失和出现</strong></li><li><strong>万事万物符合物理定律 - 定律简洁且可理解</strong></li><li><strong>无力定律可以用数学描写 - 数学是宇宙的终极法则？</strong></li><li><strong>允许意识的存在 - 世界的有没有终极的目的</strong></li></ol><h2 id="🔮-现实的七个可能性"><a href="#🔮-现实的七个可能性" class="headerlink" title="🔮 现实的七个可能性"></a>🔮 现实的七个可能性</h2><ol><li><p>数学宇宙假设，MUH，Mathematical Universe Hypothesis</p><ul><li>提出者：麻省理工学院的物理学家麦克斯·泰格马克（Max Tegmark）</li><li>核心观点：宇宙就是数学展开，一切本质都是数学形式</li><li>优点：无需解释宇宙来源，数学客观存在</li><li>缺点：解释一切又什么都没解释，无生活指引</li></ul></li><li><p>模拟假说, SImulation Hypothesis</p><ul><li>提出者：尼克·博斯特罗姆（牛津大学）</li><li>核心观点：宇宙是高等文明的计算机模拟</li><li>逻辑：模拟世界数量远多于真实世界数量</li><li>优点：可操作性强，可寻找模拟痕迹</li><li>支持者：马斯克</li></ul></li><li><p>信息本原论（It from Bit）</p><ul><li>提出者：约翰·惠勒（物理学家），鲁奇亚诺·弗洛里迪（哲学家）</li><li>核心观点：宇宙本质是信息，不是物质或精神</li><li>意义：人生意义在于创造、传递、保存有价值的信息</li><li>与数学宇宙区别：信息可由我们创造</li></ul></li><li><p>全息宇宙，Holographic Universe</p><ul><li>提出者：杰拉德·特霍夫特等</li><li>核心观点：三维空间是更高维边界的全息投影</li><li>意义：万事万物本质相连，不是孤立存在</li><li>启发：每个动作都可能影响整个宇宙</li></ul></li><li><p>计算宇宙论</p><ul><li>相关人物：史蒂芬·沃尔弗勒姆</li><li>核心观点：宇宙是超级计算机，运行宏大算法</li><li>特点：时空有颗粒度，不是无限可分</li><li>指引：逆向工程破解宇宙算法目的</li></ul></li><li><p>泛心论</p><ul><li>支持者：盖伦·斯特劳森（英国哲学家）</li><li>核心观点：一切物质都有意识，包括基本粒子</li><li>优点：绕过意识来源问题，万物有灵</li><li>慰藉：不再孤独，对万物有道德责任</li></ul></li><li><p>意识现实论（心灵本源论）</p><ul><li>代表人物：唐纳德·霍夫曼</li><li>核心观点：物质世界是内心意识的投射，只有心灵真实存在</li><li>特点：宇宙是统一意识场，个体是终端接口</li><li>道德意义：他人是&quot;我&quot;的一部分，共同构成世界</li></ul></li></ol><h2 id="🤔-深层思考"><a href="#🤔-深层思考" class="headerlink" title="🤔 深层思考"></a>🤔 深层思考</h2><h3 id="哲学困境"><a href="#哲学困境" class="headerlink" title="哲学困境"></a>哲学困境</h3><ul><li>所有假说都不可证伪</li><li>都只是猜想，无法完全说服</li><li>人类可能无法真正理解宇宙（需要跳出系统）</li></ul><h3 id="可能的答案"><a href="#可能的答案" class="headerlink" title="可能的答案"></a>可能的答案</h3><ul><li>也许我们不应该寻求完全理解世界</li><li>意义可能必须主观设定</li><li>正因为如此，我们才拥有自由意志</li></ul><h2 id="💡-个人感悟"><a href="#💡-个人感悟" class="headerlink" title="💡 个人感悟"></a>💡 个人感悟</h2><ol><li><strong>谦虚态度：承认人类认知的局限性</strong></li><li><strong>实用主义：在相当程度上理解世界运行即可。</strong></li><li><strong>主观意义：意义需要自己的设定和创造。</strong></li><li><strong>开放心态：保持对不同可能性的探索。</strong></li></ol><p><strong>核心启发：在科学无法解释的领域，哲学提供了多种思考框架。虽然无法确定哪个正确，但思考过程本身就有价值，帮助我们更好地理解自己和世界的关系。</strong></p>]]></content>
    
    
    <summary type="html">在科学无法解释的领域，哲学提供了多种思考框架。虽然无法确定哪个正确，但思考过程本身就有价值，帮助我们更好地理解自己和世界的关系。</summary>
    
    
    
    <category term="学习笔记" scheme="https://zhifu-tech.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="笔记" scheme="https://zhifu-tech.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="学习" scheme="https://zhifu-tech.github.io/tags/%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="万维钢-精英日课6" scheme="https://zhifu-tech.github.io/tags/%E4%B8%87%E7%BB%B4%E9%92%A2-%E7%B2%BE%E8%8B%B1%E6%97%A5%E8%AF%BE6/"/>
    
    <category term="万维钢-精英日课" scheme="https://zhifu-tech.github.io/tags/%E4%B8%87%E7%BB%B4%E9%92%A2-%E7%B2%BE%E8%8B%B1%E6%97%A5%E8%AF%BE/"/>
    
    <category term="万维钢" scheme="https://zhifu-tech.github.io/tags/%E4%B8%87%E7%BB%B4%E9%92%A2/"/>
    
    <category term="哲学思考" scheme="https://zhifu-tech.github.io/tags/%E5%93%B2%E5%AD%A6%E6%80%9D%E8%80%83/"/>
    
  </entry>
  
  <entry>
    <title>笔记: 万维钢-精英日课6-目的、认知、框架、焦虑：印证与超越四则</title>
    <link href="https://zhifu-tech.github.io/2025/10/14/%E4%B8%87%E7%BB%B4%E9%92%A2-%E7%B2%BE%E8%8B%B1%E6%97%A5%E8%AF%BE6-%E7%9B%AE%E7%9A%84%E3%80%81%E8%AE%A4%E7%9F%A5%E3%80%81%E6%A1%86%E6%9E%B6%E3%80%81%E7%84%A6%E8%99%91%EF%BC%9A%E5%8D%B0%E8%AF%81%E4%B8%8E%E8%B6%85%E8%B6%8A%E5%9B%9B%E5%88%99/"/>
    <id>https://zhifu-tech.github.io/2025/10/14/%E4%B8%87%E7%BB%B4%E9%92%A2-%E7%B2%BE%E8%8B%B1%E6%97%A5%E8%AF%BE6-%E7%9B%AE%E7%9A%84%E3%80%81%E8%AE%A4%E7%9F%A5%E3%80%81%E6%A1%86%E6%9E%B6%E3%80%81%E7%84%A6%E8%99%91%EF%BC%9A%E5%8D%B0%E8%AF%81%E4%B8%8E%E8%B6%85%E8%B6%8A%E5%9B%9B%E5%88%99/</id>
    <published>2025-10-13T16:03:36.000Z</published>
    <updated>2025-10-13T16:03:36.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="第一个新知：人生的目的比开心更重要"><a href="#第一个新知：人生的目的比开心更重要" class="headerlink" title="第一个新知：人生的目的比开心更重要"></a><strong>第一个新知：人生的目的比开心更重要</strong></h2><h3 id="研究背景"><a href="#研究背景" class="headerlink" title="研究背景"></a>研究背景</h3><ul><li>之前的研究已经证明：有明确人生目的的人平均比没有目的的人多活7年</li><li>50岁以后，目的感强的人死亡风险明显低于目的感弱的人</li></ul><h3 id="新研究发现（2024年2月，芬兰科学家）"><a href="#新研究发现（2024年2月，芬兰科学家）" class="headerlink" title="新研究发现（2024年2月，芬兰科学家）"></a>新研究发现（2024年2月，芬兰科学家）</h3><ul><li>研究对象：近6000名美国中年人，追踪23年</li><li>对比指标：生活满意度 vs 生活目的性</li></ul><h3 id="关键发现"><a href="#关键发现" class="headerlink" title="关键发现"></a>关键发现</h3><ul><li>两个指标都有正向影响：<ul><li>生活满意度高的人活得更长</li><li>生活目的感强的人也活得更长</li></ul></li><li>关键差异在于身体健康因素：<ul><li>生活满意度对长寿的影响主要通过<strong>健康</strong>这个中介变量起作用</li><li>排除健康因素后，生活满意度的影响就不明显了</li><li>但生活目的感对长寿的影响即使排除健康因素仍然非常显著</li></ul></li></ul><h3 id="重要结论"><a href="#重要结论" class="headerlink" title="重要结论"></a>重要结论</h3><ul><li>一个人身体不好，但只要他有&quot;我为什么要活&quot;的理由，有强烈的目的感，还是能活得很长</li><li>单纯想提高生活满意度没有这样的效果</li><li>&quot;做人呢，最重要的是开心&quot;这句话是错的</li><li>开心只是副产品，整天只知道追求开心的人可能会陷入空虚</li><li>人活着最重要的是要有意义，有目的，有使命</li></ul><h3 id="摘抄引用"><a href="#摘抄引用" class="headerlink" title="摘抄引用"></a>摘抄引用</h3><ol><li><strong>人活着要有使命感，要有一个长远的目的 —— 你为什么而活。这个事儿必须能让你生命不息、奋斗不止。</strong></li><li><strong>做人呢，最重要的是开心。要在健康的基础上。</strong></li><li><strong>人活着最重要的不是开心，而是要有意义、目的、和使命。</strong></li></ol><hr><h2 id="第二个新知：认知能力，用进废退"><a href="#第二个新知：认知能力，用进废退" class="headerlink" title="第二个新知：认知能力，用进废退"></a><strong>第二个新知：认知能力，用进废退</strong></h2><h3 id="传统认知"><a href="#传统认知" class="headerlink" title="传统认知"></a>传统认知</h3><ul><li>人的智力在30岁左右达到顶峰，然后开始走下坡路</li><li>流体智力（思维速度、逻辑推理）和晶体智力（知识经验积累）都会在30岁左右达到巅峰</li></ul><h3 id="新研究发现（2025年3月5日，德国研究）"><a href="#新研究发现（2025年3月5日，德国研究）" class="headerlink" title="新研究发现（2025年3月5日，德国研究）"></a>新研究发现（2025年3月5日，德国研究）</h3><p>研究对象：3000多名16-65岁德国成年人，每隔3.5年测试一次</p><h3 id="颠覆性发现"><a href="#颠覆性发现" class="headerlink" title="颠覆性发现"></a>颠覆性发现</h3><ol><li><p>真正的认知巅峰在40岁多一点，不是30岁</p><ul><li>以前30岁是巅峰的结论是用截面数据统计的，有内在问题</li><li>新一代人比老一代人水平高，不是因为大脑变老，而是因为教育进步</li></ul></li><li><p>认知能力退化不是因为大脑生理性衰老，而是因为不用它了</p><ul><li>工作中经常使用文字和数学能力的人，这两项能力在40岁以后还持续上升，到65岁退休才到达巅峰</li><li>只要用，这些能力就不会退化</li><li>不用这些能力的人，30多岁就开始退化了</li></ul></li><li><p>职业和性别差异</p><ul><li>白领工作和受教育程度高的人：认知能力不会在40岁之后退步，一直在提升</li><li>蓝领工作、受教育程度低的人：由于工作中很少用到复杂认知技能，35岁左右就开始下滑</li><li>女性：认知技能退化速度比男性快（可能是生理性的，但更可能是&quot;用不用&quot;的问题）</li></ul></li></ol><h3 id="核心结论"><a href="#核心结论" class="headerlink" title="核心结论"></a>核心结论</h3><p><strong>用尽废退：大脑的生理性衰老鼻我们想象的慢得多，也许根本就不会老。它知识需要你多用而已。</strong></p><h2 id="第三个认知：主动选择解读框架决定感受"><a href="#第三个认知：主动选择解读框架决定感受" class="headerlink" title="第三个认知：主动选择解读框架决定感受"></a>第三个认知：主动选择解读框架决定感受</h2><h3 id="理论基础"><a href="#理论基础" class="headerlink" title="理论基础"></a>理论基础</h3><ul><li>决定你对一件事情反应的，并不是这件事本身，而是你如何解读它。</li><li>你的解读绝对主观感受，主观感受影响身心健康。</li></ul><h3 id="新研究验证（2025年2月，密歇根大学）"><a href="#新研究验证（2025年2月，密歇根大学）" class="headerlink" title="新研究验证（2025年2月，密歇根大学）"></a>新研究验证（2025年2月，密歇根大学）</h3><p>研究主题：对&quot;独处&quot;的不同解读如何影响内心感受</p><h3 id="研究发现"><a href="#研究发现" class="headerlink" title="研究发现"></a>研究发现</h3><ol><li>框架决定看法：<ul><li>接触&quot;独处有好处&quot;的信息越多，就越相信独处的好处</li><li>接触&quot;独处有坏处&quot;的信息越多，就越相信独处的坏处</li></ul></li><li>解读决定结果：<ul><li>对独处持负面看法：独处时间越长，孤独感越强，情绪越低落</li><li>对独处持正面看法：即使独处时间很长，也不会感到那么孤独，反而会感到满足、情绪更稳定，幸福感更高</li></ul></li></ol><h3 id="核心结论-1"><a href="#核心结论-1" class="headerlink" title="核心结论"></a>核心结论</h3><ul><li>真正造成伤害的不是“独处”这个客观事实，而是对独处的解读，是产生的“孤独感”</li><li>可怕的不是孤独，是孤独感</li><li>事情就是这么个事情，一切取决于你怎么看。</li></ul><h2 id="第四个新知：如何消减焦虑"><a href="#第四个新知：如何消减焦虑" class="headerlink" title="第四个新知：如何消减焦虑"></a>第四个新知：如何消减焦虑</h2><h3 id="问题背景"><a href="#问题背景" class="headerlink" title="问题背景"></a>问题背景</h3><ul><li>生活中真正让人头疼的不是重大变故，而是&quot;慢性日常麻烦&quot;</li><li>面对压力事件最不好的反应是反刍（耿耿于怀，反复想）</li></ul><h3 id="方法一：暂时搁置（2023年，荷兰研究）"><a href="#方法一：暂时搁置（2023年，荷兰研究）" class="headerlink" title="方法一：暂时搁置（2023年，荷兰研究）"></a>方法一：暂时搁置（2023年，荷兰研究）</h3><ul><li><p>核心策略：把麻烦搁置，先别急着处理</p></li><li><p>具体做法：</p><ul><li>电器坏了、工作争执等小麻烦，不要立刻着急处理</li><li>现在事情刚发生，容易把小事当成大事，看不清大局</li><li>等一等再看，会发现很多事没那么严重</li></ul></li><li><p>研究结果：七项实验证明，把引起焦虑的小事暂时推一推，等情绪冷静下来再处理，效果更好</p></li></ul><h3 id="方法二：直接忽略（2023年，剑桥大学研究）"><a href="#方法二：直接忽略（2023年，剑桥大学研究）" class="headerlink" title="方法二：直接忽略（2023年，剑桥大学研究）"></a>方法二：直接忽略（2023年，剑桥大学研究）</h3><ul><li>核心策略：并不是所有担忧都值得关注</li><li>具体做法：<ul><li>很多事情根本不需要处理</li><li>很多想法直接忽略就好</li><li>进行忽略技能培训<br>研究结果：对16个国家120名成年人进行3天在线培训，教他们忽略担心和恐惧，结果焦虑、负面情绪和抑郁程度都显著降低，效果持续超过3个月</li></ul></li></ul><h3 id="核心结论-2"><a href="#核心结论-2" class="headerlink" title="核心结论"></a>核心结论</h3><ul><li>不担心也是一种技能：这事儿我不管了，你们爱咋咋地吧</li><li>我们的大脑是用来想大事的，不是用来担心小麻烦的</li><li>请善待你的大脑</li></ul><h2 id="理想人生的四个要素"><a href="#理想人生的四个要素" class="headerlink" title="理想人生的四个要素"></a>理想人生的四个要素</h2><p>把这四个新知放在一起，一个理想的人生呼之欲出：</p><ol><li><strong>使命要任重道远：有个此生无悔的大任务，为此生命不息，奋斗不止</strong></li><li><strong>成长要积极进取：积极使用高认知技能，不能因为毕业、工作熟练、年纪大了就只做简单工作</strong></li><li><strong>生活要往宽处想：学会宽慰自己，遇事懂得换个角度从正面解读</strong></li><li><strong>小事要尽量忽略：能推就推、能放就放，最好直接忽略，不要斤斤计较</strong></li></ol><h3 id="最终结论"><a href="#最终结论" class="headerlink" title="最终结论"></a>最终结论</h3><p>**成大事者不纠结。**这些是科学研究反复证明的道理：这样你不但过得更爽，而且活得更长。</p>]]></content>
    
    
    <summary type="html">这四个新知都印证了之前讲过的道理，并带来了新进展，说明知识是动态的、有机的，会不断长出心的枝叶。</summary>
    
    
    
    <category term="学习笔记" scheme="https://zhifu-tech.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="笔记" scheme="https://zhifu-tech.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="学习" scheme="https://zhifu-tech.github.io/tags/%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="万维钢-精英日课6" scheme="https://zhifu-tech.github.io/tags/%E4%B8%87%E7%BB%B4%E9%92%A2-%E7%B2%BE%E8%8B%B1%E6%97%A5%E8%AF%BE6/"/>
    
    <category term="万维钢-精英日课" scheme="https://zhifu-tech.github.io/tags/%E4%B8%87%E7%BB%B4%E9%92%A2-%E7%B2%BE%E8%8B%B1%E6%97%A5%E8%AF%BE/"/>
    
    <category term="万维钢" scheme="https://zhifu-tech.github.io/tags/%E4%B8%87%E7%BB%B4%E9%92%A2/"/>
    
    <category term="人生智慧" scheme="https://zhifu-tech.github.io/tags/%E4%BA%BA%E7%94%9F%E6%99%BA%E6%85%A7/"/>
    
  </entry>
  
  <entry>
    <title>工具: mac 截屏指南</title>
    <link href="https://zhifu-tech.github.io/2025/10/13/mac%20%E6%88%AA%E5%B1%8F%E6%8C%87%E5%8D%97/"/>
    <id>https://zhifu-tech.github.io/2025/10/13/mac%20%E6%88%AA%E5%B1%8F%E6%8C%87%E5%8D%97/</id>
    <published>2025-10-13T09:31:01.000Z</published>
    <updated>2025-10-17T08:25:55.592Z</updated>
    
    <content type="html"><![CDATA[<p>当然！Mac 系统有非常强大且便捷的截屏功能。以下是所有常用的截屏快捷键，分为几个类别，方便你记忆。</p><h3 id="一、核心快捷键（最常用）"><a href="#一、核心快捷键（最常用）" class="headerlink" title="一、核心快捷键（最常用）"></a>一、核心快捷键（最常用）</h3><p>这些快捷键会<strong>将截图保存在桌面</strong>（默认位置，可更改）。</p><table><thead><tr><th align="left">快捷键</th><th align="left">功能说明</th><th align="left">截图预览（如有）</th></tr></thead><tbody><tr><td align="left"><strong>⇧ Shift + ⌘ Command + 3</strong></td><td align="left"><strong>全屏截图</strong>：截取整个屏幕。</td><td align="left">全屏图像</td></tr><tr><td align="left"><strong>⇧ Shift + ⌘ Command + 4</strong></td><td align="left"><strong>区域截图</strong>：光标变为十字线，拖选区域进行截图。</td><td align="left">所选区域图像</td></tr><tr><td align="left"><strong>⇧ Shift + ⌘ Command + 5</strong></td><td align="left"><strong>调出截屏工具栏</strong>（见第二部分详解）</td><td align="left">-</td></tr></tbody></table><hr><h3 id="二、高级快捷键（区域截图的延伸）"><a href="#二、高级快捷键（区域截图的延伸）" class="headerlink" title="二、高级快捷键（区域截图的延伸）"></a>二、高级快捷键（区域截图的延伸）</h3><p>在按下 <strong>⇧ Shift + ⌘ Command + 4</strong> 后，还可以使用以下高级技巧：</p><table><thead><tr><th align="left">操作</th><th align="left">功能说明</th></tr></thead><tbody><tr><td align="left">按下 <strong>空格键</strong></td><td align="left">模式切换为<strong>窗口截图</strong>。移动光标到某个窗口上，窗口会高亮显示，点击即可单独截取该窗口（带漂亮阴影效果）。</td></tr><tr><td align="left">按住 <strong>空格键</strong>（拖动）</td><td align="left">锁定所选区域，然后整体移动选区位置。</td></tr><tr><td align="left">按住 <strong>Shift</strong> 键</td><td align="left">锁定选区宽度或高度，只允许单向移动。</td></tr><tr><td align="left">按住 <strong>Option</strong> 键</td><td align="left">以起点为中心，等比例缩放选区。</td></tr></tbody></table><hr><h3 id="三、使用截屏工具栏-⇧-Shift-⌘-Command-5"><a href="#三、使用截屏工具栏-⇧-Shift-⌘-Command-5" class="headerlink" title="三、使用截屏工具栏 (⇧ Shift + ⌘ Command + 5)"></a>三、使用截屏工具栏 (⇧ Shift + ⌘ Command + 5)</h3><p>这是最直观的方式，尤其适合录制屏幕。按下后会屏幕底部会出现一个控制条：</p><p><strong>截屏选项（前三个图标）：</strong></p><ol><li><strong>捕获整个屏幕</strong>：同 Command+Shift+3。</li><li><strong>捕获所选窗口</strong>：点击后，再点击某个窗口即可截图。</li><li><strong>捕获所选部分</strong>：同 Command+Shift+4，可自定义区域。</li></ol><p><strong>录屏选项（后两个图标）：</strong><br>4. <strong>录制整个屏幕</strong><br>5. <strong>录制所选部分</strong></p><p>点击工具栏上的 <strong>“选项”</strong>，你可以进行重要设置，例如：</p><ul><li><strong>保存到</strong>：更改保存位置（如桌面、文稿、剪贴板）。</li><li><strong>定时器</strong>：设置 5 秒或 10 秒后开始截屏&#x2F;录屏。</li><li>显示&#x2F;隐藏鼠标指针等。</li></ul><hr><h3 id="四、直接截图到剪贴板（不保存文件）"><a href="#四、直接截图到剪贴板（不保存文件）" class="headerlink" title="四、直接截图到剪贴板（不保存文件）"></a>四、直接截图到剪贴板（不保存文件）</h3><p>如果你希望截图后<strong>直接粘贴</strong>到微信、Word 等应用中，<strong>而不生成文件</strong>，可以在以上所有快捷键中<strong>额外增加一个 <code>Control</code> 键</strong>。</p><p>例如：</p><ul><li><strong>Control + ⇧ Shift + ⌘ Command + 3</strong>：全屏截图到剪贴板。</li><li><strong>Control + ⇧ Shift + ⌘ Command + 4</strong>：区域截图到剪贴板（之后同样可以按空格键截取窗口）。</li></ul><h3 id="总结表格"><a href="#总结表格" class="headerlink" title="总结表格"></a>总结表格</h3><table><thead><tr><th align="left">目标</th><th align="left">快捷键</th><th align="left">备注</th></tr></thead><tbody><tr><td align="left"><strong>全屏截图（保存文件）</strong></td><td align="left"><code>⇧ Shift + ⌘ Command + 3</code></td><td align="left">最常用</td></tr><tr><td align="left"><strong>区域&#x2F;窗口截图（保存文件）</strong></td><td align="left"><code>⇧ Shift + ⌘ Command + 4</code></td><td align="left">按空格可截窗口</td></tr><tr><td align="left"><strong>调出功能全面的工具栏</strong></td><td align="left"><code>⇧ Shift + ⌘ Command + 5</code></td><td align="left">推荐新手，功能最全</td></tr><tr><td align="left"><strong>全屏截图（到剪贴板）</strong></td><td align="left"><code>Control + ⇧ Shift + ⌘ Command + 3</code></td><td align="left">直接粘贴使用</td></tr><tr><td align="left"><strong>区域截图（到剪贴板）</strong></td><td align="left"><code>Control + ⇧ Shift + ⌘ Command + 4</code></td><td align="left">直接粘贴使用</td></tr></tbody></table><p><strong>小贴士</strong>：在 macOS Mojave 或更高版本中，截图后屏幕右下角会短暂显示一个缩略图，点击它可以快速对截图进行标记、编辑或分享。</p><p>希望这个详细的总结对你有帮助！</p>]]></content>
    
    
    <summary type="html">mac 截屏指南</summary>
    
    
    
    <category term="工具" scheme="https://zhifu-tech.github.io/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="工具" scheme="https://zhifu-tech.github.io/tags/%E5%B7%A5%E5%85%B7/"/>
    
    <category term="指南" scheme="https://zhifu-tech.github.io/tags/%E6%8C%87%E5%8D%97/"/>
    
    <category term="Mac" scheme="https://zhifu-tech.github.io/tags/Mac/"/>
    
  </entry>
  
  <entry>
    <title>笔记: 万维钢-精英日课6-AI没有末那识</title>
    <link href="https://zhifu-tech.github.io/2025/10/13/%E4%B8%87%E7%BB%B4%E9%92%A2-%E7%B2%BE%E8%8B%B1%E6%97%A5%E8%AF%BE6-ai%E6%B2%A1%E6%9C%89%E6%9C%AB%E9%82%A3%E8%AF%86/"/>
    <id>https://zhifu-tech.github.io/2025/10/13/%E4%B8%87%E7%BB%B4%E9%92%A2-%E7%B2%BE%E8%8B%B1%E6%97%A5%E8%AF%BE6-ai%E6%B2%A1%E6%9C%89%E6%9C%AB%E9%82%A3%E8%AF%86/</id>
    <published>2025-10-13T04:26:03.000Z</published>
    <updated>2025-10-17T08:25:55.592Z</updated>
    
    <content type="html"><![CDATA[<h2 id="📝-核心观点"><a href="#📝-核心观点" class="headerlink" title="📝 核心观点"></a>📝 核心观点</h2><ol><li><p>「意识，consiousness」的科学定义：现代科学对意识的基本共识有三个特征：</p><ul><li>1，<strong>主观体验 - 对事物的主观感受。</strong></li><li>2，<strong>自我觉察 — 有“我”的概念。</strong></li><li>3，<strong>连续的主体感 - 连贯的人生叙事。</strong></li></ul></li><li><p>佛教唯识宗的「八识理论」：</p><ul><li>前五识 - 眼、耳、鼻、舌、身，对应身体的五感 - 视觉、听觉、味觉和触觉。</li><li>第六识 - 意，Mental Consciousness，分析、推理、思考、理性、情感活动，是前五识的直接反应，是做判断和决策的过程。</li><li>第七识 - 末那识，Manas Consciousness，自我意识，自我身份认同，形成「我执」。</li><li>第八识 - 阿赖耶识，Ālayavijñāna，Ālaya Consciousness，类似心理学中的潜意识，存储「业力」。</li></ul></li><li><p>佛教唯识宗与现代意识理论达马西奥的四个层次的对应关系：</p><ul><li>感应，sense &#x3D;&#x3D; 前五识</li><li>情感，feeling &#x3D;&#x3D; 第六识，意 &#x3D;&#x3D; 主观体验</li><li>自我存在，self-being &#x3D;&#x3D; 第七识，末那识 &#x3D;&#x3D; 自我觉察和连续的主体感</li><li>认知，knowing &#x3D;&#x3D; 第八识，阿赖耶识</li></ul></li><li><p>情感是<strong>作为物质的身体</strong>和<strong>作为精神的意识</strong>之间的桥梁。</p></li><li><p>AI意识的现状</p><ul><li>AI目前具备的能力：<ul><li>前五识-五感，多模态输入</li><li>第六识，智能推理和情感模拟</li></ul></li><li>AI缺乏的关键要素<ul><li>第七识-末那识：没有真正的自我感</li><li>第八识-阿赖耶识：没有人生经历和业力</li></ul></li><li>原因分析：<ul><li>没有身体，缺乏边界感</li><li>没有连贯的叙事</li><li>每次对话都是全新开始，无真正记忆</li></ul></li></ul></li><li><p>AI拥有意识的四个要素</p><ol><li>具身化：给AI一个身体</li><li>自我模式：有“我”的概念</li><li>持续记忆：连贯的自我叙事</li><li>自主的注意力和自主代理能力：自主，有追求，有使命感。</li></ol></li><li><p>哲学思考</p><ul><li>意识可能是幻觉</li><li>无意识（末那识和阿赖耶识）的AI可能是最好的工具。</li><li>有意识的AI可能带来伦理问题</li></ul></li></ol><h2 id="💡-个人思考"><a href="#💡-个人思考" class="headerlink" title="💡 个人思考"></a>💡 个人思考</h2><p><strong>概念的精确化，是洞见的开始。</strong></p><p><strong>我的理解</strong>：</p><p>万老师先解释了意识在佛教中的定义、现代脑神经科学家和哲学家心目中的定义，能够清晰低分析AI意识到本质，发现当前AI只有智能模拟能力，缺乏真正的自我意识和连续的主题感。</p><p><strong>疑问和思考</strong>：</p><ol><li><p>在我们向别人解释一个概念或者一个结论时，可以采用万Sir的这种叙事的方式，先精确化概念，量化出一些标准（准则），然后把自我的结论往这些准则上靠拢。</p></li><li><p>我们分析一个事物是不是满足某个判定，首先要找到这个判定的标准（概念的定义），然后逐条分析。</p></li></ol>]]></content>
    
    
    <summary type="html">学习笔记：万维钢-精英日课6-ai</summary>
    
    
    
    <category term="学习笔记" scheme="https://zhifu-tech.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="笔记" scheme="https://zhifu-tech.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="学习" scheme="https://zhifu-tech.github.io/tags/%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="万维钢-精英日课6" scheme="https://zhifu-tech.github.io/tags/%E4%B8%87%E7%BB%B4%E9%92%A2-%E7%B2%BE%E8%8B%B1%E6%97%A5%E8%AF%BE6/"/>
    
    <category term="万维钢-精英日课" scheme="https://zhifu-tech.github.io/tags/%E4%B8%87%E7%BB%B4%E9%92%A2-%E7%B2%BE%E8%8B%B1%E6%97%A5%E8%AF%BE/"/>
    
    <category term="万维钢" scheme="https://zhifu-tech.github.io/tags/%E4%B8%87%E7%BB%B4%E9%92%A2/"/>
    
  </entry>
  
  <entry>
    <title>工具: 网站图标（Favicon）提取和设置指南</title>
    <link href="https://zhifu-tech.github.io/2025/10/13/%E7%BD%91%E7%AB%99%E5%9B%BE%E6%A0%87%EF%BC%88Favicon%EF%BC%89%E6%8F%90%E5%8F%96%E5%92%8C%E8%AE%BE%E7%BD%AE%E6%8C%87%E5%8D%97/"/>
    <id>https://zhifu-tech.github.io/2025/10/13/%E7%BD%91%E7%AB%99%E5%9B%BE%E6%A0%87%EF%BC%88Favicon%EF%BC%89%E6%8F%90%E5%8F%96%E5%92%8C%E8%AE%BE%E7%BD%AE%E6%8C%87%E5%8D%97/</id>
    <published>2025-10-13T03:02:00.000Z</published>
    <updated>2025-10-13T03:02:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>网站图标（Favicon）是显示在浏览器标签页、书签栏和地址栏中的小图标。本指南将详细介绍如何提取、制作和设置各种尺寸的网站图标。</p><h2 id="当前配置状态"><a href="#当前配置状态" class="headerlink" title="当前配置状态"></a>当前配置状态</h2><h3 id="您的网站当前使用的图标配置"><a href="#您的网站当前使用的图标配置" class="headerlink" title="您的网站当前使用的图标配置"></a>您的网站当前使用的图标配置</h3><p>在 <code>_config.next.yml</code> 中，Next 主题的默认 favicon 配置：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在 themes/next/_config.yml 中的默认配置</span></span><br><span class="line"><span class="attr">favicon:</span></span><br><span class="line">  <span class="attr">small:</span> <span class="string">/images/favicon-16x16-next.png</span></span><br><span class="line">  <span class="attr">medium:</span> <span class="string">/images/favicon-32x32-next.png</span></span><br><span class="line">  <span class="attr">apple_touch_icon:</span> <span class="string">/images/apple-touch-icon-next.png</span></span><br><span class="line">  <span class="attr">safari_pinned_tab:</span> <span class="string">/images/logo.svg</span></span><br><span class="line">  <span class="comment">#android_manifest: /manifest.json</span></span><br></pre></td></tr></table></figure><h3 id="当前图标文件"><a href="#当前图标文件" class="headerlink" title="当前图标文件"></a>当前图标文件</h3><p>您的网站中已有的图标文件：</p><ul><li><code>public/images/favicon-16x16-next.png</code> - 16x16 像素图标</li><li><code>public/images/favicon-32x32-next.png</code> - 32x32 像素图标</li><li><code>public/images/apple-touch-icon-next.png</code> - 180x180 像素 Apple 设备图标</li><li><code>public/images/logo.svg</code> - SVG 格式的 logo</li></ul><h2 id="如何提取网站图标"><a href="#如何提取网站图标" class="headerlink" title="如何提取网站图标"></a>如何提取网站图标</h2><h3 id="方法一：从现有网站提取"><a href="#方法一：从现有网站提取" class="headerlink" title="方法一：从现有网站提取"></a>方法一：从现有网站提取</h3><h4 id="1-1-使用浏览器开发者工具"><a href="#1-1-使用浏览器开发者工具" class="headerlink" title="1.1 使用浏览器开发者工具"></a>1.1 使用浏览器开发者工具</h4><ol><li>打开目标网站</li><li>按 <code>F12</code> 打开开发者工具</li><li>在 <code>Elements</code> 标签页中搜索 <code>favicon</code> 或 <code>icon</code></li><li>找到图标链接，右键选择&quot;在新标签页中打开&quot;</li><li>保存图标文件</li></ol><h4 id="1-2-使用在线工具"><a href="#1-2-使用在线工具" class="headerlink" title="1.2 使用在线工具"></a>1.2 使用在线工具</h4><p><strong>推荐工具：</strong></p><ul><li><strong>Favicon.io</strong>: <span class="exturl" data-url="aHR0cHM6Ly9mYXZpY29uLmlvLw==">https://favicon.io/<i class="fa fa-external-link-alt"></i></span></li><li><strong>RealFaviconGenerator</strong>: <span class="exturl" data-url="aHR0cHM6Ly9yZWFsZmF2aWNvbmdlbmVyYXRvci5uZXQv">https://realfavicongenerator.net/<i class="fa fa-external-link-alt"></i></span></li><li><strong>Favicon Generator</strong>: <span class="exturl" data-url="aHR0cHM6Ly93d3cuZmF2aWNvbi1nZW5lcmF0b3Iub3JnLw==">https://www.favicon-generator.org/<i class="fa fa-external-link-alt"></i></span></li></ul><p><strong>使用步骤：</strong></p><ol><li>输入网站 URL</li><li>工具会自动检测并提取所有图标</li><li>下载生成的图标包</li></ol><h4 id="1-3-手动提取"><a href="#1-3-手动提取" class="headerlink" title="1.3 手动提取"></a>1.3 手动提取</h4><p>在浏览器地址栏输入：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">https://example.com/favicon.ico</span><br><span class="line">https://example.com/apple-touch-icon.png</span><br><span class="line">https://example.com/favicon-16x16.png</span><br><span class="line">https://example.com/favicon-32x32.png</span><br></pre></td></tr></table></figure><h3 id="方法二：从图片制作图标"><a href="#方法二：从图片制作图标" class="headerlink" title="方法二：从图片制作图标"></a>方法二：从图片制作图标</h3><h4 id="2-1-使用在线工具制作"><a href="#2-1-使用在线工具制作" class="headerlink" title="2.1 使用在线工具制作"></a>2.1 使用在线工具制作</h4><p><strong>Favicon.io 制作步骤：</strong></p><ol><li>访问 <span class="exturl" data-url="aHR0cHM6Ly9mYXZpY29uLmlvLw==">https://favicon.io/<i class="fa fa-external-link-alt"></i></span></li><li>选择 &quot;Generate from Image&quot;</li><li>上传您的 logo 图片（建议 512x512 像素以上）</li><li>调整预览效果</li><li>下载生成的图标包</li></ol><h4 id="2-2-使用设计软件制作"><a href="#2-2-使用设计软件制作" class="headerlink" title="2.2 使用设计软件制作"></a>2.2 使用设计软件制作</h4><p><strong>Photoshop 制作步骤：</strong></p><ol><li>打开您的 logo 文件</li><li>创建新文档，尺寸 512x512 像素</li><li>将 logo 调整到合适大小</li><li>导出为不同尺寸：<ul><li>16x16 像素（favicon-16x16.png）</li><li>32x32 像素（favicon-32x32.png）</li><li>180x180 像素（apple-touch-icon.png）</li><li>512x512 像素（apple-touch-icon-512x512.png）</li></ul></li></ol><h2 id="图标尺寸规范"><a href="#图标尺寸规范" class="headerlink" title="图标尺寸规范"></a>图标尺寸规范</h2><h3 id="标准尺寸要求"><a href="#标准尺寸要求" class="headerlink" title="标准尺寸要求"></a>标准尺寸要求</h3><table><thead><tr><th>用途</th><th>尺寸</th><th>格式</th><th>文件名</th></tr></thead><tbody><tr><td>浏览器标签页</td><td>16x16</td><td>PNG&#x2F;ICO</td><td>favicon-16x16.png</td></tr><tr><td>浏览器标签页</td><td>32x32</td><td>PNG&#x2F;ICO</td><td>favicon-32x32.png</td></tr><tr><td>Apple 设备</td><td>180x180</td><td>PNG</td><td>apple-touch-icon.png</td></tr><tr><td>Apple 设备</td><td>512x512</td><td>PNG</td><td>apple-touch-icon-512x512.png</td></tr><tr><td>Safari 固定标签</td><td>任意</td><td>SVG</td><td>safari-pinned-tab.svg</td></tr><tr><td>Android 设备</td><td>192x192</td><td>PNG</td><td>android-chrome-192x192.png</td></tr><tr><td>Android 设备</td><td>512x512</td><td>PNG</td><td>android-chrome-512x512.png</td></tr><tr><td>通用</td><td>16x16</td><td>ICO</td><td>favicon.ico</td></tr></tbody></table><h3 id="设计建议"><a href="#设计建议" class="headerlink" title="设计建议"></a>设计建议</h3><ol><li><strong>简洁明了</strong>：图标应该在小尺寸下仍然清晰可辨</li><li><strong>高对比度</strong>：确保在浅色和深色背景下都清晰可见</li><li><strong>避免细节</strong>：避免过于复杂的细节，在小尺寸下会模糊</li><li><strong>品牌一致性</strong>：与网站整体设计风格保持一致</li></ol><h2 id="在-Hexo-Next-主题中设置图标"><a href="#在-Hexo-Next-主题中设置图标" class="headerlink" title="在 Hexo Next 主题中设置图标"></a>在 Hexo Next 主题中设置图标</h2><h3 id="步骤一：准备图标文件"><a href="#步骤一：准备图标文件" class="headerlink" title="步骤一：准备图标文件"></a>步骤一：准备图标文件</h3><ol><li>将制作好的图标文件放入 <code>source/images/</code> 目录</li><li>确保文件命名符合规范</li></ol><h3 id="步骤二：配置-favicon"><a href="#步骤二：配置-favicon" class="headerlink" title="步骤二：配置 favicon"></a>步骤二：配置 favicon</h3><p>在 <code>_config.next.yml</code> 中添加或修改 favicon 配置：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在 _config.next.yml 中添加 favicon 配置</span></span><br><span class="line"><span class="attr">favicon:</span></span><br><span class="line">  <span class="attr">small:</span> <span class="string">/images/favicon-16x16.png</span></span><br><span class="line">  <span class="attr">medium:</span> <span class="string">/images/favicon-32x32.png</span></span><br><span class="line">  <span class="attr">apple_touch_icon:</span> <span class="string">/images/apple-touch-icon.png</span></span><br><span class="line">  <span class="attr">safari_pinned_tab:</span> <span class="string">/images/logo.svg</span></span><br><span class="line">  <span class="attr">android_manifest:</span> <span class="string">/manifest.json</span></span><br></pre></td></tr></table></figure><h3 id="步骤三：创建-manifest-json（可选）"><a href="#步骤三：创建-manifest-json（可选）" class="headerlink" title="步骤三：创建 manifest.json（可选）"></a>步骤三：创建 manifest.json（可选）</h3><p>在 <code>source/</code> 目录下创建 <code>manifest.json</code>：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ZHIFU-Tech&#x27;s Blog&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;short_name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ZHIFU-Tech&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;icons&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;src&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/images/android-chrome-192x192.png&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;sizes&quot;</span><span class="punctuation">:</span> <span class="string">&quot;192x192&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;image/png&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;src&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/images/android-chrome-512x512.png&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;sizes&quot;</span><span class="punctuation">:</span> <span class="string">&quot;512x512&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;image/png&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;theme_color&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#ffffff&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;background_color&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#ffffff&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;display&quot;</span><span class="punctuation">:</span> <span class="string">&quot;standalone&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h2 id="实际操作示例"><a href="#实际操作示例" class="headerlink" title="实际操作示例"></a>实际操作示例</h2><h3 id="为您的网站设置自定义图标"><a href="#为您的网站设置自定义图标" class="headerlink" title="为您的网站设置自定义图标"></a>为您的网站设置自定义图标</h3><p>基于您现有的 logo 文件，我来帮您设置自定义 favicon：</p><h4 id="1-检查现有-logo"><a href="#1-检查现有-logo" class="headerlink" title="1. 检查现有 logo"></a>1. 检查现有 logo</h4><p>您已经有：</p><ul><li><code>source/images/zhifu-tech-logo.svg</code> - SVG 格式 logo</li><li><code>source/images/zhifu-tech-logo-w1024-h1024.png</code> - 高分辨率 PNG logo</li></ul><h4 id="2-生成不同尺寸的图标"><a href="#2-生成不同尺寸的图标" class="headerlink" title="2. 生成不同尺寸的图标"></a>2. 生成不同尺寸的图标</h4><p>您可以使用以下方法：</p><p>+<strong>方法 A：使用在线工具</strong></p><ol><li>访问 <span class="exturl" data-url="aHR0cHM6Ly9mYXZpY29uLmlvLw==">https://favicon.io/<i class="fa fa-external-link-alt"></i></span></li><li>上传 <code>zhifu-tech-logo-w1024-h1024.png</code></li><li>下载生成的图标包</li></ol><p>+<strong>方法 B：使用命令行工具（如果有 ImageMagick）</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装 ImageMagick（如果未安装）</span></span><br><span class="line"><span class="comment"># macOS: brew install imagemagick</span></span><br><span class="line"><span class="comment"># Ubuntu: sudo apt-get install imagemagick</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成不同尺寸的图标</span></span><br><span class="line">convert <span class="built_in">source</span>/images/zhifu-tech-logo-w1024-h1024.png -resize 16x16 public/images/favicon-16x16.png</span><br><span class="line">convert <span class="built_in">source</span>/images/zhifu-tech-logo-w1024-h1024.png -resize 32x32 public/images/favicon-32x32.png</span><br><span class="line">convert <span class="built_in">source</span>/images/zhifu-tech-logo-w1024-h1024.png -resize 180x180 public/images/apple-touch-icon.png</span><br><span class="line">convert <span class="built_in">source</span>/images/zhifu-tech-logo-w1024-h1024.png -resize 512x512 public/images/apple-touch-icon-512x512.png</span><br></pre></td></tr></table></figure><h4 id="3-更新配置文件"><a href="#3-更新配置文件" class="headerlink" title="3. 更新配置文件"></a>3. 更新配置文件</h4><p>在 <code>_config.next.yml</code> 中添加：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 添加 favicon 配置</span></span><br><span class="line"><span class="attr">favicon:</span></span><br><span class="line">  <span class="attr">small:</span> <span class="string">/images/favicon-16x16.png</span></span><br><span class="line">  <span class="attr">medium:</span> <span class="string">/images/favicon-32x32.png</span></span><br><span class="line">  <span class="attr">apple_touch_icon:</span> <span class="string">/images/apple-touch-icon.png</span></span><br><span class="line">  <span class="attr">safari_pinned_tab:</span> <span class="string">/images/zhifu-tech-logo.svg</span></span><br></pre></td></tr></table></figure><h2 id="验证图标设置"><a href="#验证图标设置" class="headerlink" title="验证图标设置"></a>验证图标设置</h2><h3 id="检查方法"><a href="#检查方法" class="headerlink" title="检查方法"></a>检查方法</h3><ol><li><p><strong>浏览器测试</strong>：</p><ul><li>清除浏览器缓存</li><li>重新加载网站</li><li>检查标签页是否显示新图标</li></ul></li><li><p><strong>开发者工具检查</strong>：</p><ul><li>按 F12 打开开发者工具</li><li>在 Network 标签页中查看图标文件是否正常加载</li></ul></li><li><p><strong>在线验证工具</strong>：</p><ul><li>使用 <span class="exturl" data-url="aHR0cHM6Ly9yZWFsZmF2aWNvbmdlbmVyYXRvci5uZXQvZmF2aWNvbl9jaGVja2Vy">https://realfavicongenerator.net/favicon_checker<i class="fa fa-external-link-alt"></i></span></li><li>输入您的网站 URL 进行验证</li></ul></li></ol><h2 id="常见问题解决"><a href="#常见问题解决" class="headerlink" title="常见问题解决"></a>常见问题解决</h2><p>+Q: 图标不显示或显示旧图标<br>+A:</p><ol><li>清除浏览器缓存</li><li>检查文件路径是否正确</li><li>确保文件已正确上传到服务器</li><li>等待 CDN 缓存更新</li></ol><p>+Q: 图标在不同设备上显示效果不同<br>A:</p><ol><li>确保提供了所有标准尺寸的图标</li><li>检查 SVG 图标是否包含正确的颜色信息</li><li>测试在不同浏览器中的显示效果</li></ol><p>+Q: 如何优化图标加载性能<br>+A:</p><ol><li>使用适当的文件格式（PNG 用于位图，SVG 用于矢量图）</li><li>压缩图标文件大小</li><li>使用 CDN 加速图标加载</li></ol><h2 id="最佳实践"><a href="#最佳实践" class="headerlink" title="最佳实践"></a>最佳实践</h2><ol><li><strong>提供多种格式</strong>：同时提供 ICO、PNG 和 SVG 格式</li><li><strong>测试兼容性</strong>：在不同浏览器和设备上测试显示效果</li><li><strong>保持更新</strong>：定期检查和更新图标文件</li><li><strong>监控性能</strong>：确保图标文件不会影响网站加载速度</li></ol><p>通过以上步骤，您就可以成功为您的网站设置自定义图标了！</p>]]></content>
    
    
    <summary type="html">网站图标（Favicon）提取和设置指南</summary>
    
    
    
    <category term="工具" scheme="https://zhifu-tech.github.io/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="网站图标" scheme="https://zhifu-tech.github.io/tags/%E7%BD%91%E7%AB%99%E5%9B%BE%E6%A0%87/"/>
    
  </entry>
  
  <entry>
    <title>docker 启动优化</title>
    <link href="https://zhifu-tech.github.io/2025/10/13/docker%20%E5%90%AF%E5%8A%A8%E4%BC%98%E5%8C%96/"/>
    <id>https://zhifu-tech.github.io/2025/10/13/docker%20%E5%90%AF%E5%8A%A8%E4%BC%98%E5%8C%96/</id>
    <published>2025-10-13T02:54:50.000Z</published>
    <updated>2025-10-17T08:25:55.592Z</updated>
    
    <content type="html"><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>针对 Hexo 博客项目，可以实施以下优化措施，来提升 Docker 运行速度：</p><h3 id="1-✅-Dockerfile-构建缓存优化"><a href="#1-✅-Dockerfile-构建缓存优化" class="headerlink" title="1. ✅ Dockerfile 构建缓存优化"></a>1. ✅ Dockerfile 构建缓存优化</h3><ul><li><strong>问题</strong>：每次构建都重新安装所有依赖</li><li><strong>解决方案</strong>：<ul><li>先复制 <code>package*.json</code> 文件，再复制源代码</li><li>使用 <code>npm ci</code> 替代 <code>npm install</code>，更快且更可靠</li><li>添加 <code>--no-audit --no-fund</code> 参数跳过不必要的检查</li></ul></li></ul><h3 id="2-✅-添加-dockerignore-文件"><a href="#2-✅-添加-dockerignore-文件" class="headerlink" title="2. ✅ 添加 .dockerignore 文件"></a>2. ✅ 添加 .dockerignore 文件</h3><ul><li><strong>问题</strong>：构建上下文包含大量不必要的文件</li><li><strong>解决方案</strong>：<ul><li>排除 <code>node_modules/</code>、<code>public/</code>、<code>logs/</code> 等目录</li><li>排除 IDE 文件、Git 文件、文档文件等</li><li>减少构建上下文大小，提升构建速度</li></ul></li></ul><h3 id="3-✅-npm-安装优化"><a href="#3-✅-npm-安装优化" class="headerlink" title="3. ✅ npm 安装优化"></a>3. ✅ npm 安装优化</h3><ul><li><strong>问题</strong>：npm 安装过程较慢</li><li><strong>解决方案</strong>：<ul><li>使用国内镜像源 <code>https://registry.npmmirror.com</code></li><li>设置 npm 缓存目录到 <code>/tmp/.npm</code></li><li>启用离线优先模式 <code>prefer-offline true</code></li></ul></li></ul><h3 id="4-✅-多阶段构建优化"><a href="#4-✅-多阶段构建优化" class="headerlink" title="4. ✅ 多阶段构建优化"></a>4. ✅ 多阶段构建优化</h3><ul><li><strong>问题</strong>：生产镜像包含不必要的构建工具</li><li><strong>解决方案</strong>：<ul><li>使用 Alpine Linux 基础镜像，体积更小</li><li>合并 RUN 指令减少镜像层数</li><li>清理 APK 缓存减少镜像大小</li></ul></li></ul><h3 id="5-✅-镜像大小优化"><a href="#5-✅-镜像大小优化" class="headerlink" title="5. ✅ 镜像大小优化"></a>5. ✅ 镜像大小优化</h3><ul><li><strong>问题</strong>：Docker 镜像过大，启动较慢</li><li><strong>解决方案</strong>：<ul><li>使用 Alpine Linux 基础镜像</li><li>多阶段构建，分离构建和运行环境</li><li>优化 Nginx 配置，提升静态文件服务性能</li></ul></li></ul><h2 id="🎯-使用方法"><a href="#🎯-使用方法" class="headerlink" title="🎯 使用方法"></a>🎯 使用方法</h2><h3 id="Docker-环境管理"><a href="#Docker-环境管理" class="headerlink" title="Docker 环境管理"></a>Docker 环境管理</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 构建并运行环境</span></span><br><span class="line">./hexo.sh run</span><br><span class="line"></span><br><span class="line"><span class="comment"># 仅构建镜像</span></span><br><span class="line">./hexo.sh build</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启容器</span></span><br><span class="line">./hexo.sh restart</span><br><span class="line"></span><br><span class="line"><span class="comment"># 停止容器</span></span><br><span class="line">./hexo.sh stop</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看状态</span></span><br><span class="line">./hexo.sh status</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看日志</span></span><br><span class="line">./hexo.sh logs</span><br><span class="line"></span><br><span class="line"><span class="comment"># 清理所有资源</span></span><br><span class="line">./hexo.sh clean</span><br></pre></td></tr></table></figure><h2 id="📊-性能提升预期"><a href="#📊-性能提升预期" class="headerlink" title="📊 性能提升预期"></a>📊 性能提升预期</h2><table><thead><tr><th>优化项目</th><th>预期提升</th><th>说明</th></tr></thead><tbody><tr><td>构建缓存</td><td>50-80%</td><td>依赖未变化时跳过安装</td></tr><tr><td>构建上下文</td><td>30-50%</td><td>减少传输文件大小</td></tr><tr><td>npm 安装</td><td>20-40%</td><td>使用国内镜像和优化参数</td></tr><tr><td>镜像大小</td><td>30-50%</td><td>使用 Alpine 和多阶段构建</td></tr></tbody></table><h2 id="🚨-注意事项"><a href="#🚨-注意事项" class="headerlink" title="🚨 注意事项"></a>🚨 注意事项</h2><ol><li><strong>环境部署</strong>：使用 <code>./hexo.sh run</code> 进行环境部署</li><li><strong>清理资源</strong>：定期使用 <code>./hexo.sh clean</code> 清理未使用的镜像和容器</li><li><strong>日志查看</strong>：使用 <code>./hexo.sh logs</code> 查看容器日志</li><li><strong>状态监控</strong>：使用 <code>./hexo.sh status</code> 查看容器运行状态</li></ol><h2 id="📈-监控和调试"><a href="#📈-监控和调试" class="headerlink" title="📈 监控和调试"></a>📈 监控和调试</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看镜像大小</span></span><br><span class="line">docker images zhifu-tech-blog</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看容器资源使用</span></span><br><span class="line">docker stats zhifu-tech-blog</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看构建历史</span></span><br><span class="line">docker <span class="built_in">history</span> zhifu-tech-blog:latest</span><br><span class="line"></span><br><span class="line"><span class="comment"># 进入容器调试</span></span><br><span class="line">docker <span class="built_in">exec</span> -it zhifu-tech-blog sh</span><br></pre></td></tr></table></figure><hr><p>通过这些优化，你的 Docker 环境运行速度应该会有显著提升！🎉</p>]]></content>
    
    
    <summary type="html">针对 Hexo 博客项目，可以实施以下优化措施，来提升 Docker 运行速度</summary>
    
    
    
    <category term="工具" scheme="https://zhifu-tech.github.io/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="docker" scheme="https://zhifu-tech.github.io/tags/docker/"/>
    
    <category term="启动优化" scheme="https://zhifu-tech.github.io/tags/%E5%90%AF%E5%8A%A8%E4%BC%98%E5%8C%96/"/>
    
    <category term="博客维护" scheme="https://zhifu-tech.github.io/tags/%E5%8D%9A%E5%AE%A2%E7%BB%B4%E6%8A%A4/"/>
    
  </entry>
  
  <entry>
    <title>Base64 编码详解</title>
    <link href="https://zhifu-tech.github.io/2025/10/13/encode-base64/"/>
    <id>https://zhifu-tech.github.io/2025/10/13/encode-base64/</id>
    <published>2025-10-13T02:40:00.000Z</published>
    <updated>2025-10-17T08:25:55.592Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-Base64-原理"><a href="#1-Base64-原理" class="headerlink" title="1. Base64 原理"></a>1. Base64 原理</h2><p>Base64 是一种用64个字符来表示任意二进制数据的编码方法。它使用以下字符集：</p><ul><li><strong>大写字母</strong>：A-Z (26个字符)</li><li><strong>小写字母</strong>：a-z (26个字符)  </li><li><strong>数字</strong>：0-9 (10个字符)</li><li><strong>特殊字符</strong>：+ 和 &#x2F; (2个字符)</li><li><strong>填充字符</strong>：&#x3D; (用于填充)</li></ul><h3 id="编码过程"><a href="#编码过程" class="headerlink" title="编码过程"></a>编码过程</h3><ol><li>将输入数据按每3个字节（24位）分组</li><li>将24位分成4组，每组6位</li><li>每组6位转换为对应的Base64字符</li><li>如果最后一组不足3字节，用0填充并用&#x3D;补齐</li></ol><h3 id="为什么使用Base64？"><a href="#为什么使用Base64？" class="headerlink" title="为什么使用Base64？"></a>为什么使用Base64？</h3><ul><li><strong>防止特殊字符问题</strong>：URL中的特殊字符可能导致解析错误</li><li><strong>跨平台兼容</strong>：确保数据在不同系统间正确传输</li><li><strong>防止爬虫</strong>：搜索引擎爬虫可能不会自动解析编码链接</li><li><strong>用户交互控制</strong>：可以添加点击统计和验证逻辑</li></ul><h2 id="2-编码-解码方法"><a href="#2-编码-解码方法" class="headerlink" title="2. 编码&#x2F;解码方法"></a>2. 编码&#x2F;解码方法</h2><h3 id="命令行方式"><a href="#命令行方式" class="headerlink" title="命令行方式"></a>命令行方式</h3><h4 id="Mac-Linux"><a href="#Mac-Linux" class="headerlink" title="Mac&#x2F;Linux"></a>Mac&#x2F;Linux</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 编码</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;https://github.com/hexo-next/theme-next-docs&quot;</span> | <span class="built_in">base64</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 解码</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;aHR0cHM6Ly9naXRodWIuY29tL2hleG8tbmV4dC9oZXhvLW5leHQuZ2l0aHViLmlv&quot;</span> | <span class="built_in">base64</span> -d</span><br></pre></td></tr></table></figure><h4 id="Windows-PowerShell"><a href="#Windows-PowerShell" class="headerlink" title="Windows PowerShell"></a>Windows PowerShell</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 编码</span></span><br><span class="line">[<span class="type">Convert</span>]::ToBase64String([<span class="type">Text.Encoding</span>]::UTF8.GetBytes(<span class="string">&quot;https://github.com/hexo-next/theme-next-docs&quot;</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解码</span></span><br><span class="line">[<span class="type">Text.Encoding</span>]::UTF8.GetString([<span class="type">Convert</span>]::FromBase64String(<span class="string">&quot;aHR0cHM6Ly9naXRodWIuY29tL2hleG8tbmV4dC9oZXhvLW5leHQuZ2l0aHViLmlv&quot;</span>))</span><br></pre></td></tr></table></figure><h3 id="在线工具"><a href="#在线工具" class="headerlink" title="在线工具"></a>在线工具</h3><ul><li><span class="exturl" data-url="aHR0cHM6Ly93d3cuYmFzZTY0ZW5jb2RlLm9yZy8=">Base64编码解码器<i class="fa fa-external-link-alt"></i></span></li><li><span class="exturl" data-url="aHR0cHM6Ly90b29sLmNoaW5hei5jb20vdG9vbHMvYmFzZTY0LmFzcHg=">Base64在线工具<i class="fa fa-external-link-alt"></i></span></li></ul><h2 id="3-JavaScript-代码处理"><a href="#3-JavaScript-代码处理" class="headerlink" title="3. JavaScript 代码处理"></a>3. JavaScript 代码处理</h2><h3 id="基本编码-解码"><a href="#基本编码-解码" class="headerlink" title="基本编码&#x2F;解码"></a>基本编码&#x2F;解码</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 编码</span></span><br><span class="line"><span class="keyword">const</span> originalUrl = <span class="string">&quot;https://github.com/hexo-next/theme-next-docs&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> encodedUrl = <span class="title function_">btoa</span>(originalUrl);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(encodedUrl); <span class="comment">// aHR0cHM6Ly9naXRodWIuY29tL2hleG8tbmV4dC9oZXhvLW5leHQuZ2l0aHViLmlv</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 解码</span></span><br><span class="line"><span class="keyword">const</span> decodedUrl = <span class="title function_">atob</span>(encodedUrl);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(decodedUrl); <span class="comment">// https://github.com/hexo-next/theme-next-docs</span></span><br></pre></td></tr></table></figure><h3 id="处理中文URL"><a href="#处理中文URL" class="headerlink" title="处理中文URL"></a>处理中文URL</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 编码中文URL</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">encodeChineseUrl</span>(<span class="params">url</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">btoa</span>(<span class="built_in">unescape</span>(<span class="built_in">encodeURIComponent</span>(url)));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 解码中文URL</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">decodeChineseUrl</span>(<span class="params">encodedUrl</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">decodeURIComponent</span>(<span class="built_in">escape</span>(<span class="title function_">atob</span>(encodedUrl)));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用示例</span></span><br><span class="line"><span class="keyword">const</span> chineseUrl = <span class="string">&quot;https://example.com/中文路径&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> encoded = <span class="title function_">encodeChineseUrl</span>(chineseUrl);</span><br><span class="line"><span class="keyword">const</span> decoded = <span class="title function_">decodeChineseUrl</span>(encoded);</span><br></pre></td></tr></table></figure><h3 id="在HTML中处理Base64链接"><a href="#在HTML中处理Base64链接" class="headerlink" title="在HTML中处理Base64链接"></a>在HTML中处理Base64链接</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 为所有 .exturl 元素添加点击事件</span></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;.exturl&#x27;</span>).<span class="title function_">forEach</span>(<span class="keyword">function</span>(<span class="params">element</span>) &#123;</span><br><span class="line">    element.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">        e.<span class="title function_">preventDefault</span>();</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">const</span> encodedUrl = <span class="variable language_">this</span>.<span class="title function_">getAttribute</span>(<span class="string">&#x27;data-url&#x27;</span>);</span><br><span class="line">        <span class="keyword">if</span> (encodedUrl) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="keyword">const</span> decodedUrl = <span class="title function_">atob</span>(encodedUrl);</span><br><span class="line">                </span><br><span class="line">                <span class="comment">// 可以添加统计逻辑</span></span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;用户点击了链接:&#x27;</span>, decodedUrl);</span><br><span class="line">                </span><br><span class="line">                <span class="comment">// 打开链接</span></span><br><span class="line">                <span class="variable language_">window</span>.<span class="title function_">open</span>(decodedUrl, <span class="string">&#x27;_blank&#x27;</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;Base64解码失败:&#x27;</span>, error);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="批量处理Base64链接"><a href="#批量处理Base64链接" class="headerlink" title="批量处理Base64链接"></a>批量处理Base64链接</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 批量编码URLs</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">encodeUrls</span>(<span class="params">urls</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> urls.<span class="title function_">map</span>(<span class="function"><span class="params">url</span> =&gt;</span> (&#123;</span><br><span class="line">        <span class="attr">original</span>: url,</span><br><span class="line">        <span class="attr">encoded</span>: <span class="title function_">btoa</span>(url)</span><br><span class="line">    &#125;));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 批量解码URLs</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">decodeUrls</span>(<span class="params">encodedUrls</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> encodedUrls.<span class="title function_">map</span>(<span class="function"><span class="params">encoded</span> =&gt;</span> (&#123;</span><br><span class="line">        <span class="attr">encoded</span>: encoded,</span><br><span class="line">        <span class="attr">decoded</span>: <span class="title function_">atob</span>(encoded)</span><br><span class="line">    &#125;));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用示例</span></span><br><span class="line"><span class="keyword">const</span> urls = [</span><br><span class="line">    <span class="string">&quot;https://github.com/hexo-next/theme-next-docs&quot;</span>,</span><br><span class="line">    <span class="string">&quot;https://theme-next.js.org&quot;</span>,</span><br><span class="line">    <span class="string">&quot;https://github.com/next-theme/hexo-theme-next&quot;</span></span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> encodedData = <span class="title function_">encodeUrls</span>(urls);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(encodedData);</span><br></pre></td></tr></table></figure><h3 id="在Hexo-Next主题中的应用"><a href="#在Hexo-Next主题中的应用" class="headerlink" title="在Hexo Next主题中的应用"></a>在Hexo Next主题中的应用</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 主题中的外部链接处理</span></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;DOMContentLoaded&#x27;</span>, <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 处理所有外部链接</span></span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;a[data-url]&#x27;</span>).<span class="title function_">forEach</span>(<span class="keyword">function</span>(<span class="params">link</span>) &#123;</span><br><span class="line">        link.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">            e.<span class="title function_">preventDefault</span>();</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">const</span> encodedUrl = <span class="variable language_">this</span>.<span class="title function_">getAttribute</span>(<span class="string">&#x27;data-url&#x27;</span>);</span><br><span class="line">            <span class="keyword">const</span> decodedUrl = <span class="title function_">atob</span>(encodedUrl);</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 添加点击统计</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">typeof</span> gtag !== <span class="string">&#x27;undefined&#x27;</span>) &#123;</span><br><span class="line">                <span class="title function_">gtag</span>(<span class="string">&#x27;event&#x27;</span>, <span class="string">&#x27;click&#x27;</span>, &#123;</span><br><span class="line">                    <span class="string">&#x27;event_category&#x27;</span>: <span class="string">&#x27;external_link&#x27;</span>,</span><br><span class="line">                    <span class="string">&#x27;event_label&#x27;</span>: decodedUrl</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 打开链接</span></span><br><span class="line">            <span class="variable language_">window</span>.<span class="title function_">open</span>(decodedUrl, <span class="string">&#x27;_blank&#x27;</span>, <span class="string">&#x27;noopener,noreferrer&#x27;</span>);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="4-实际应用场景"><a href="#4-实际应用场景" class="headerlink" title="4. 实际应用场景"></a>4. 实际应用场景</h2><h3 id="在Hexo-Next主题中"><a href="#在Hexo-Next主题中" class="headerlink" title="在Hexo Next主题中"></a>在Hexo Next主题中</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 模板中的使用 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;exturl&quot;</span> <span class="attr">data-url</span>=<span class="string">&quot;aHR0cHM6Ly9naXRodWIuY29tL2hleG8tbmV4dC9oZXhvLW5leHQuZ2l0aHViLmlv&quot;</span>&gt;</span></span><br><span class="line">  查看源码</span><br><span class="line"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="防止直接访问"><a href="#防止直接访问" class="headerlink" title="防止直接访问"></a>防止直接访问</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 检查用户是否通过点击访问</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">handleEncodedLink</span>(<span class="params">encodedUrl</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> decodedUrl = <span class="title function_">atob</span>(encodedUrl);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 记录访问来源</span></span><br><span class="line">    <span class="keyword">const</span> referrer = <span class="variable language_">document</span>.<span class="property">referrer</span>;</span><br><span class="line">    <span class="keyword">if</span> (!referrer || !referrer.<span class="title function_">includes</span>(<span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">hostname</span>)) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;直接访问被阻止&#x27;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="variable language_">window</span>.<span class="title function_">open</span>(decodedUrl, <span class="string">&#x27;_blank&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-注意事项"><a href="#5-注意事项" class="headerlink" title="5. 注意事项"></a>5. 注意事项</h2><ol><li><strong>安全性</strong>：Base64不是加密，只是编码，不要用于敏感数据</li><li><strong>性能</strong>：大量数据编码&#x2F;解码可能影响性能</li><li><strong>兼容性</strong>：<code>btoa()</code> 和 <code>atob()</code> 在所有现代浏览器中都支持</li><li><strong>中文处理</strong>：需要先进行URI编码再Base64编码</li><li><strong>填充字符</strong>：解码时确保&#x3D;填充字符正确</li></ol><h2 id="6-常用工具函数"><a href="#6-常用工具函数" class="headerlink" title="6. 常用工具函数"></a>6. 常用工具函数</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 完整的Base64工具类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Base64Utils</span> &#123;</span><br><span class="line">    <span class="comment">// 编码</span></span><br><span class="line">    <span class="keyword">static</span> <span class="title function_">encode</span>(<span class="params">str</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_">btoa</span>(<span class="built_in">unescape</span>(<span class="built_in">encodeURIComponent</span>(str)));</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 解码</span></span><br><span class="line">    <span class="keyword">static</span> <span class="title function_">decode</span>(<span class="params">encodedStr</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">decodeURIComponent</span>(<span class="built_in">escape</span>(<span class="title function_">atob</span>(encodedStr)));</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 验证是否为有效的Base64</span></span><br><span class="line">    <span class="keyword">static</span> <span class="title function_">isValid</span>(<span class="params">str</span>) &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="title function_">btoa</span>(<span class="title function_">atob</span>(str)) === str;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 批量编码</span></span><br><span class="line">    <span class="keyword">static</span> <span class="title function_">encodeArray</span>(<span class="params">arr</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> arr.<span class="title function_">map</span>(<span class="function"><span class="params">item</span> =&gt;</span> <span class="variable language_">this</span>.<span class="title function_">encode</span>(item));</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 批量解码</span></span><br><span class="line">    <span class="keyword">static</span> <span class="title function_">decodeArray</span>(<span class="params">encodedArr</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> encodedArr.<span class="title function_">map</span>(<span class="function"><span class="params">item</span> =&gt;</span> <span class="variable language_">this</span>.<span class="title function_">decode</span>(item));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用示例</span></span><br><span class="line"><span class="keyword">const</span> url = <span class="string">&quot;https://github.com/hexo-next/theme-next-docs&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> encoded = <span class="title class_">Base64Utils</span>.<span class="title function_">encode</span>(url);</span><br><span class="line"><span class="keyword">const</span> decoded = <span class="title class_">Base64Utils</span>.<span class="title function_">decode</span>(encoded);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(encoded, decoded);</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">Base64 原理,编码/解码方法</summary>
    
    
    
    <category term="工具" scheme="https://zhifu-tech.github.io/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="博客维护" scheme="https://zhifu-tech.github.io/tags/%E5%8D%9A%E5%AE%A2%E7%BB%B4%E6%8A%A4/"/>
    
  </entry>
  
  <entry>
    <title>安装 rsvg-convert</title>
    <link href="https://zhifu-tech.github.io/2025/10/13/svg-to-png/"/>
    <id>https://zhifu-tech.github.io/2025/10/13/svg-to-png/</id>
    <published>2025-10-13T02:40:00.000Z</published>
    <updated>2025-10-17T08:25:55.592Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install librsvg</span><br></pre></td></tr></table></figure><h2 id="将-SVG-图片转换为-PNG-图片"><a href="#将-SVG-图片转换为-PNG-图片" class="headerlink" title="将 SVG 图片转换为 PNG 图片"></a>将 SVG 图片转换为 PNG 图片</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rsvg-convert -w 1024 -h 1024 ~/Work/zhifu-tech/source/images/tech-logo.svg -o ~/Work/zhifu-tech/source/images/tech-logo.png</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=</summary>
      
    
    
    
    <category term="工具" scheme="https://zhifu-tech.github.io/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="博客维护" scheme="https://zhifu-tech.github.io/tags/%E5%8D%9A%E5%AE%A2%E7%BB%B4%E6%8A%A4/"/>
    
  </entry>
  
  <entry>
    <title>指南：博客文章创建指南</title>
    <link href="https://zhifu-tech.github.io/2025/10/13/%E5%8D%9A%E5%AE%A2%E6%96%87%E7%AB%A0%E5%88%9B%E5%BB%BA%E6%8C%87%E5%8D%97/"/>
    <id>https://zhifu-tech.github.io/2025/10/13/%E5%8D%9A%E5%AE%A2%E6%96%87%E7%AB%A0%E5%88%9B%E5%BB%BA%E6%8C%87%E5%8D%97/</id>
    <published>2025-10-13T02:40:00.000Z</published>
    <updated>2025-10-17T08:25:55.593Z</updated>
    
    <content type="html"><![CDATA[<p>博客系统采用了<strong>模板化</strong>和<strong>自动化</strong>的设计理念，通过预定义模板避免重复编写相同的元数据和结构，确保所有内容具有统一的格式，降低使用门槛，便于后续维护。</p><h2 id="文章结构"><a href="#文章结构" class="headerlink" title="文章结构"></a>文章结构</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">zhifu-tech-blog/</span><br><span class="line">├── scaffolds/          <span class="comment"># 模板文件</span></span><br><span class="line">│   ├── post.md         <span class="comment"># 文章模板</span></span><br><span class="line">│   ├── note.md         <span class="comment"># 通用笔记模板</span></span><br><span class="line">│   ├── note-book.md    <span class="comment"># 读书笔记模板</span></span><br><span class="line">│   ├── tool.md         <span class="comment"># 工具指南模板</span></span><br><span class="line">│   └── page.md         <span class="comment"># 页面模板</span></span><br><span class="line">├── <span class="built_in">source</span>/_posts/      <span class="comment"># 生成的文章存放位置</span></span><br><span class="line">└── hexo.sh            <span class="comment"># 管理脚本（包含new命令）</span></span><br></pre></td></tr></table></figure><h2 id="内容类型说明"><a href="#内容类型说明" class="headerlink" title="内容类型说明"></a>内容类型说明</h2><table><thead><tr><th>类型</th><th>用途</th><th>模板</th><th>特点</th></tr></thead><tbody><tr><td><strong>文章 (Post)</strong></td><td>技术文章、生活感悟、项目分享</td><td><code>post.md</code></td><td>简洁的元数据结构</td></tr><tr><td><strong>通用笔记 (Note)</strong></td><td>学习笔记、会议记录、思考总结</td><td><code>note.md</code></td><td>结构化的学习框架</td></tr><tr><td><strong>读书笔记 (Book Note)</strong></td><td>书籍阅读心得、书评</td><td><code>note-book.md</code></td><td>丰富的书籍信息展示</td></tr><tr><td><strong>工具指南 (Tool)</strong></td><td>工具使用指南、教程文档</td><td><code>tool.md</code></td><td>完整的工具介绍框架</td></tr><tr><td><strong>页面 (Page)</strong></td><td>关于页面、项目介绍、静态页面</td><td><code>page.md</code></td><td>独立的页面结构</td></tr></tbody></table><h2 id="如何新建内容"><a href="#如何新建内容" class="headerlink" title="如何新建内容"></a>如何新建内容</h2><ol><li><strong>执行命令</strong>：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./hexo.sh new <span class="string">&quot;文章标题&quot;</span></span><br></pre></td></tr></table></figure><ol start="2"><li><strong>文件生成</strong>：</li></ol><ul><li>文件位置：<code>source/_posts/文章标题.md</code></li><li>自动填充基础元数据</li></ul><p>+创建通用笔记</p><ol><li><strong>执行命令</strong>：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./hexo.sh new note <span class="string">&quot;学习主题&quot;</span></span><br></pre></td></tr></table></figure><ol start="2"><li><p><strong>文件生成</strong>：</p><ul><li>文件位置：<code>source/_posts/学习主题.md</code></li><li>包含结构化的学习框架</li></ul></li></ol><p>+创建读书笔记</p><ol><li><strong>执行命令</strong>：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./hexo.sh new note book <span class="string">&quot;《书名》读书笔记&quot;</span></span><br></pre></td></tr></table></figure><ol start="2"><li><strong>文件生成</strong>：</li></ol><ul><li>文件位置：<code>source/_posts/《书名》读书笔记.md</code></li><li>包含丰富的书籍信息展示</li></ul><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><ol><li><strong>环境要求</strong>：确保已安装 Node.js 和 Hexo CLI</li><li><strong>文件位置</strong>：所有生成的文件都位于 <code>source/_posts/</code> 目录</li><li><strong>模板编辑</strong>：可以修改 <code>scaffolds/</code> 目录下的模板文件</li><li><strong>内容编辑</strong>：生成后请替换模板中的占位符内容</li></ol>]]></content>
    
    
    <summary type="html">博客系统采用了**模板化**和**自动化**的设计理念，通过预定义模板避免重复编写相同的元数据和结构，确保所有内容具有统一的格式，降低使用门槛，便于后续维护</summary>
    
    
    
    <category term="工具" scheme="https://zhifu-tech.github.io/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="博客维护" scheme="https://zhifu-tech.github.io/tags/%E5%8D%9A%E5%AE%A2%E7%BB%B4%E6%8A%A4/"/>
    
  </entry>
  
  <entry>
    <title>笔记: 万维钢-精英日课6-启发模式和穷举模式</title>
    <link href="https://zhifu-tech.github.io/2025/10/11/%E4%B8%87%E7%BB%B4%E9%92%A2-%E7%B2%BE%E8%8B%B1%E6%97%A5%E8%AF%BE6-%E5%90%AF%E5%8F%91%E6%A8%A1%E5%BC%8F%E5%92%8C%E7%A9%B7%E4%B8%BE%E6%A8%A1%E5%BC%8F/"/>
    <id>https://zhifu-tech.github.io/2025/10/11/%E4%B8%87%E7%BB%B4%E9%92%A2-%E7%B2%BE%E8%8B%B1%E6%97%A5%E8%AF%BE6-%E5%90%AF%E5%8F%91%E6%A8%A1%E5%BC%8F%E5%92%8C%E7%A9%B7%E4%B8%BE%E6%A8%A1%E5%BC%8F/</id>
    <published>2025-10-11T08:46:18.000Z</published>
    <updated>2025-10-17T08:25:55.592Z</updated>
    
    <content type="html"><![CDATA[<h2 id="📝-核心观点"><a href="#📝-核心观点" class="headerlink" title="📝 核心观点"></a>📝 核心观点</h2><ol><li><p><strong>「启发模式」依赖个体的智慧和经验，是确定这个事儿有哪些选项，有时候有神来之笔。</strong></p></li><li><p><strong>「穷举模式」依靠工作量的积累，是把所有可能的选项一个一个过一遍，期待找到最终的目标。</strong></p></li><li><p><strong>他们往往是做事的两个阶段。</strong></p></li><li><p><strong>启发这一步很容易出错，而且错误的成本极高。你会对某些可能性过于乐观，你会执着于自己的认知框架，你会被以往的经验限制。你很容易漏掉挂件的可能性。</strong></p></li><li><p><strong>穷举有「缩放定律，scaling law」，只要投入更多的无力，就更有把握得到好结果。结合AI，穷举模式正变得越来越自动化，成本在急剧下降。</strong></p></li></ol><h2 id="💡-个人思考"><a href="#💡-个人思考" class="headerlink" title="💡 个人思考"></a>💡 个人思考</h2><h3 id="英伟达之所以能持续保证GPU供应数量并实现每年性能大幅提升，核心在于其将“穷举模式”的缩放定律（Scaling-Law）转化为技术护城河与可规划的升级路径。具体可总结为三点"><a href="#英伟达之所以能持续保证GPU供应数量并实现每年性能大幅提升，核心在于其将“穷举模式”的缩放定律（Scaling-Law）转化为技术护城河与可规划的升级路径。具体可总结为三点" class="headerlink" title="英伟达之所以能持续保证GPU供应数量并实现每年性能大幅提升，核心在于其将“穷举模式”的缩放定律（Scaling Law）转化为技术护城河与可规划的升级路径。具体可总结为三点:"></a>英伟达之所以能持续保证GPU供应数量并实现每年性能大幅提升，核心在于其<strong>将“穷举模式”的缩放定律（Scaling Law）转化为技术护城河与可规划的升级路径</strong>。具体可总结为三点:</h3><ul><li><p><strong>1. 并行计算的本质决定其可扩展性</strong><br>GPU的并行架构（如大量计算单元协同处理矩阵运算）天然适合“堆量”。英伟达每代升级本质是增加计算线程、优化互联效率，如同警方通过增派人力和自动化工具加速排查。只要并行计算需求存在，性能就可通过工程优化（如芯片设计、散热、通信）持续提升，无需完全依赖芯片制程进步。</p></li><li><p><strong>2. 软硬一体生态锁定“捕鱼权”</strong><br>英伟达通过CUDA等软件生态绑定开发者，形成“鱼塘”的垄断性经营权。AI行业对算力的饥渴（如多模态模型、推理需求爆发）确保“海里永远有鱼”，而英伟达作为手握最佳渔具（GPU硬件+开发平台）的渔民，可系统性规划捕鱼节奏（如每年架构迭代），而非依赖偶然创新。</p></li><li><p><strong>3. 规模化投入消解不确定性</strong><br>英伟达将GPU研发转化为可批量解决的工程问题（如线程通信、功耗管理），通过大规模研发资源投入（“穷举式”攻关）保证迭代速度。这与警方“命案必破”的逻辑一致：靠资源投入而非个人灵感，使性能提升从“可能”变为“必然”，甚至能提前布局至2027年的技术路线。</p></li></ul><p>总结：英伟达的持续成功，本质是将技术创新从“启发模式”（依赖天才设计）转变为“穷举模式”（依靠并行架构的缩放定律和规模化工程），从而在AI算力需求爆发的“海洋”中，成为唯一能持续捕到更大鱼的系统性力量。</p><h2 id="🔗-相关链接"><a href="#🔗-相关链接" class="headerlink" title="🔗 相关链接"></a>🔗 相关链接</h2><h2 id="📋-行动清单"><a href="#📋-行动清单" class="headerlink" title="📋 行动清单"></a>📋 行动清单</h2>]]></content>
    
    
    <summary type="html">做事的两个阶段：启发模式和穷举模式</summary>
    
    
    
    
    <category term="笔记" scheme="https://zhifu-tech.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="学习" scheme="https://zhifu-tech.github.io/tags/%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="思维方法" scheme="https://zhifu-tech.github.io/tags/%E6%80%9D%E7%BB%B4%E6%96%B9%E6%B3%95/"/>
    
    <category term="万维钢-精英日课6" scheme="https://zhifu-tech.github.io/tags/%E4%B8%87%E7%BB%B4%E9%92%A2-%E7%B2%BE%E8%8B%B1%E6%97%A5%E8%AF%BE6/"/>
    
    <category term="万维钢-精英日课" scheme="https://zhifu-tech.github.io/tags/%E4%B8%87%E7%BB%B4%E9%92%A2-%E7%B2%BE%E8%8B%B1%E6%97%A5%E8%AF%BE/"/>
    
    <category term="万维钢" scheme="https://zhifu-tech.github.io/tags/%E4%B8%87%E7%BB%B4%E9%92%A2/"/>
    
  </entry>
  
  <entry>
    <title>笔记: 5why-分析法</title>
    <link href="https://zhifu-tech.github.io/2025/10/11/5why-%E5%88%86%E6%9E%90%E6%B3%95/"/>
    <id>https://zhifu-tech.github.io/2025/10/11/5why-%E5%88%86%E6%9E%90%E6%B3%95/</id>
    <published>2025-10-11T07:25:51.000Z</published>
    <updated>2025-10-17T08:25:55.592Z</updated>
    
    <content type="html"><![CDATA[<h2 id="📝-核心观点"><a href="#📝-核心观点" class="headerlink" title="📝 核心观点"></a>📝 核心观点</h2><p><strong>5Why分析法</strong>是一种通过连续追问&quot;<strong>为什么</strong>&quot;来探究问题<strong>根本原因</strong>的思维工具。</p><table><thead><tr><th align="left">核心要素</th><th align="left">具体说明</th></tr></thead><tbody><tr><td align="left"><strong>核心目标</strong></td><td align="left">识别问题的根本原因，而非仅仅解决表面症状。</td></tr><tr><td align="left"><strong>关键操作</strong></td><td align="left">对一个问题点连续提问“为什么”，形成因果链。</td></tr><tr><td align="left"><strong>提问次数</strong></td><td align="left">“5”是一个象征性数字，关键在于追问到根本原因为止，可能是3次，也可能是10次。</td></tr><tr><td align="left"><strong>终止标志</strong></td><td align="left">当原因处于你或团队的可控范围内，且解决后能有效防止问题复发时。</td></tr><tr><td align="left"><strong>起源</strong></td><td align="left">由丰田汽车公司的丰田佐吉提出，并经大野耐一发展完善，成为丰田生产系统的核心方法。</td></tr></tbody></table><h3 id="🔎-实施步骤与核心原则"><a href="#🔎-实施步骤与核心原则" class="headerlink" title="🔎 实施步骤与核心原则"></a>🔎 实施步骤与核心原则</h3><p>要有效运用5Why分析法，可以遵循以下步骤，并牢记其中的核心原则：</p><ol><li><strong>明确问题</strong>：清晰、具体地描述问题现象，<strong>最好基于数据或事实</strong>。</li><li><strong>逐层追问</strong>：从第一个“为什么”开始，根据每一个答案追问下一个“为什么”。确保每个问题和答案之间都有<strong>直接的因果关系</strong>。</li><li><strong>深挖至根本原因</strong>：持续追问，直到找出问题的根源。这个根源应满足两个条件：<br>3.1. 一是它是<strong>可控的</strong>，即可以通过改变流程、制度或设计来消除；<br>3.2. 二是消除它之后，能<strong>有效防止问题再次发生</strong>。</li><li><strong>制定并实施对策</strong>：找到根本原因后，针对性地制定永久性解决方案（治本对策），而不仅仅是临时应急（治标对策）。</li></ol><p>在分析过程中，务必坚持 <strong>“三现主义”</strong>（现场、现物、现实），即亲自到问题发生的地点，接触具体的实物，了解真实的情况，基于事实进行分析，避免主观猜测。</p><h3 id="💡-经典案例演示"><a href="#💡-经典案例演示" class="headerlink" title="💡 经典案例演示"></a>💡 经典案例演示</h3><p>让我们通过两个经典案例来感受5Why分析法的实际应用。</p><h4 id="案例一：丰田生产线停机"><a href="#案例一：丰田生产线停机" class="headerlink" title="案例一：丰田生产线停机"></a><strong>案例一：丰田生产线停机</strong></h4><p>这是源自丰田的经典案例，完美展示了如何从一个小故障追溯到系统性的根本原因。</p><ul><li><strong>问题</strong>：生产线上机器停机。</li><li><strong>1Why：为什么停机？</strong> → 机器超载，保险丝烧断。</li><li><strong>2Why：为什么超载？</strong> → 轴承润滑不足。</li><li><strong>3Why：为什么润滑不足？</strong> → 润滑泵失灵。</li><li><strong>4Why：为什么润滑泵失灵？</strong> → 泵的轮轴磨损。</li><li><strong>5Why：为什么轮轴磨损？</strong> → 杂质进入泵内（<strong>根本原因</strong>）。</li><li><strong>解决方案</strong>：在润滑泵上加装滤网，防止杂质进入。如果只解决表面问题，就只是更换保险丝，但停机问题会反复出现。</li></ul><h4 id="案例二：杰弗逊纪念馆墙面腐蚀"><a href="#案例二：杰弗逊纪念馆墙面腐蚀" class="headerlink" title="案例二：杰弗逊纪念馆墙面腐蚀"></a><strong>案例二：杰弗逊纪念馆墙面腐蚀</strong></h4><p>这个案例展示了如何将一个令人困扰的现象，通过层层剖析，找到一个出人意料且成本低廉的解决方案。</p><ul><li><strong>问题</strong>：杰弗逊纪念馆墙面腐蚀严重。</li><li><strong>1Why：为什么墙面腐蚀？</strong> → 清洁工使用腐蚀性清洁剂频繁清洗。</li><li><strong>2Why：为什么频繁清洗？</strong> → 墙上有很多鸟粪。</li><li><strong>3Why：为什么有很多鸟粪？</strong> → 这里适合蜘蛛繁殖，鸟来吃蜘蛛。</li><li><strong>4Why：为什么适合蜘蛛繁殖？</strong> → 窗帘长期关闭，室内昏暗，阳台尘埃环境适宜虫子（蜘蛛的食物）繁殖。</li><li><strong>5Why：为什么窗帘长期关闭？</strong> → 未规定开关时间，导致室内光照吸引昆虫（<strong>根本原因</strong>）。</li><li><strong>解决方案</strong>：每天傍晚拉上窗帘，阻断吸引昆虫的光源。这样就从根源上解决了整个链条的起点。</li></ul><h3 id="⚠️-常见误区与要点"><a href="#⚠️-常见误区与要点" class="headerlink" title="⚠️ 常见误区与要点"></a>⚠️ 常见误区与要点</h3><p>运用5Why分析法时，请警惕以下常见误区：</p><ul><li><strong>盲目追求5次</strong>：追问次数不是死板的，目标是找到根本原因。有时3次即可，有时需要更多。</li><li><strong>归咎于个人</strong>：避免将原因简单归结为“某人粗心”或“能力不足”。应继续追问背后的系统原因，例如“为什么缺乏培训？”或“为什么流程存在漏洞？”。</li><li><strong>逻辑链断裂</strong>：确保每个“为什么”和答案之间都存在<strong>直接的、合理的因果关系</strong>，避免跳跃式思维。</li><li><strong>基于假设而非事实</strong>：分析必须基于在“现场、现物、现实”中观察到和验证的事实，而非猜测。</li></ul><h3 id="📝-总结"><a href="#📝-总结" class="headerlink" title="📝 总结"></a>📝 总结</h3><p>5Why分析法是一个强大而实用的工具，它能帮助我们从纷繁复杂的表面问题中，揪出那个真正需要解决的“元凶”。下次当你遇到反复出现的问题时，不妨试着多问几个“为什么”，或许会有意想不到的发现。</p><p>希望这份系统的解释和案例能帮助你理解和应用5Why分析法。如果你有一个具体的问题场景想尝试分析，我很乐意和你一起探讨。</p><h2 id="💡-个人思考"><a href="#💡-个人思考" class="headerlink" title="💡 个人思考"></a>💡 个人思考</h2><blockquote><p>摘自<span class="exturl" data-url="aHR0cHM6Ly93d3cuZGVkYW8uY24vY291cnNlL2FydGljbGU/aWQ9V3FhdkRtMDEyR29sVjdPdzNxVnhQakV5OHpkazcz">得到:万维钢·精英日课6-问答：苏格拉底提问法和5WHY提问法有什么区别？<i class="fa fa-external-link-alt"></i></span></p><ol><li>5Why提问法（5why分析法）适合发现表面小毛病背后的根本性大毛病。</li><li>管理，总是人的问题，要问到「人的问题」，才算是出击了根本原因。</li><li>[5WHY提问法]知识相当于苏格拉底提问法的第一步，澄清问题。苏格拉底提问法是更系统、更本分的框架。</li><li>保罗和埃尔德发明的苏格拉底提问法，则是一套更高级的思维方法。它不只要求你找到根本原因，还要求你质疑自己的推导过程，寻找证据支持自己的判断；然后还要考虑他人的视角之下，这个问题是个什么问题，到底是你的问题还是别人的问题；还要考虑搁置问题、不解决是不是也是一个办法，以及是否我们的出发点就错了，也许你应该换个目标。</li></ol></blockquote><h2 id="🔗-相关链接"><a href="#🔗-相关链接" class="headerlink" title="🔗 相关链接"></a>🔗 相关链接</h2><ul><li>推荐阅读：<a href="/2025/10/10/%E4%B8%87%E7%BB%B4%E9%92%A2-%E7%B2%BE%E8%8B%B1%E6%97%A5%E8%AF%BE6-%E8%8B%8F%E6%A0%BC%E6%8B%89%E5%BA%95%E6%8F%90%E9%97%AE%E6%B3%95/">笔记: 万维钢-精英日课6-苏格拉底提问法</a></li></ul><h2 id="📋-行动清单"><a href="#📋-行动清单" class="headerlink" title="📋 行动清单"></a>📋 行动清单</h2>]]></content>
    
    
    <summary type="html">**5Why分析法**是一种通过连续追问&quot;**为什么**&quot;来探究问题**根本原因**的思维工具。</summary>
    
    
    
    
    <category term="笔记" scheme="https://zhifu-tech.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="学习" scheme="https://zhifu-tech.github.io/tags/%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="思维方法" scheme="https://zhifu-tech.github.io/tags/%E6%80%9D%E7%BB%B4%E6%96%B9%E6%B3%95/"/>
    
    <category term="5why分析法" scheme="https://zhifu-tech.github.io/tags/5why%E5%88%86%E6%9E%90%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>笔记: 万维钢-精英日课6-苏格拉底提问法</title>
    <link href="https://zhifu-tech.github.io/2025/10/10/%E4%B8%87%E7%BB%B4%E9%92%A2-%E7%B2%BE%E8%8B%B1%E6%97%A5%E8%AF%BE6-%E8%8B%8F%E6%A0%BC%E6%8B%89%E5%BA%95%E6%8F%90%E9%97%AE%E6%B3%95/"/>
    <id>https://zhifu-tech.github.io/2025/10/10/%E4%B8%87%E7%BB%B4%E9%92%A2-%E7%B2%BE%E8%8B%B1%E6%97%A5%E8%AF%BE6-%E8%8B%8F%E6%A0%BC%E6%8B%89%E5%BA%95%E6%8F%90%E9%97%AE%E6%B3%95/</id>
    <published>2025-10-10T14:57:31.000Z</published>
    <updated>2025-10-17T08:25:55.593Z</updated>
    
    <content type="html"><![CDATA[<h2 id="📝-核心观点"><a href="#📝-核心观点" class="headerlink" title="📝 核心观点"></a>📝 核心观点</h2><blockquote><p><strong>「苏格拉底提问法，Socratic Questioning」是一套非常高级的批判性思维方法，提问者和被提问者都不知道答案的局面，提问是为了让双方共同探索、看清局势，进而寻找解决方案，追问和质疑是为了揭示我们默认观点中的矛盾和局限，从而后的领悟和启发。</strong></p><p><strong>第一步，澄清问题，Clarification Questions。</strong><br><strong>第二步，探究假设，Probing Assumptions。</strong><br><strong>第三步，挖掘证据&#x2F;理由，Probing Reasons and Evidence。</strong><br><strong>第四步，考虑其他视角，Questioning Viewpoints and Perspectives.</strong><br><strong>第五步，探究后果和影响，Examining Implications and Consequences.</strong><br><strong>第六步，反思提问本身，Questioning the Question。</strong></p></blockquote><h3 id="📚-案例一、"><a href="#📚-案例一、" class="headerlink" title="📚 案例一、"></a>📚 案例一、</h3><p>员工小王找到经理，说：“我觉得我现在这个工作太单调了，没有发展前景。我想换个部门。”</p><p>经理应该如何用苏格拉底提问法引导这场对话呢？</p><ul><li>第一步：澄清问题，Clarification Questions</li></ul><p>确保双方对小王的想法有准确的理解，搞清楚他真正的诉求。</p><p>经理可以问：“你说工作内容太单调，是什么让你觉得单调？”“你说的发展前景，具体指的是什么？是升职、还是加薪，还是学到新的技能？”</p><p>**这里人们最容易犯的错误就是根据自己的理解提方案。**你必须搞清楚小王到底想干啥，才能对症下药。</p><ul><li>第二步：探究假设，Probing Assumptions。</li></ul><p>小王假设调岗就能不单调、就有前途，对此经理可以问：“你觉得换到别的部门就能解决问题，可是别的地方真的就更好吗？你是不是有点想当然了？”</p><ul><li>第三步：挖掘证据&#x2F;理由，Probing Reasons and Evidence。</li></ul><p>经理要求小王提供事实或者数据支撑他的观点：“你想去的那个岗位，是怎么个职业发展前景？有什么证据能证明就比现在好呢？”</p><p>这不是故意为难，很可能小王自己根本没想好，只是出于模糊的、未必正确的感觉。也许小王说一个部门，经理立即告诉他那个部门的真实情况还不如现在这个部门好。</p><ul><li>第四步：考虑其他视角，Questioning Viewpoints and Perspectives.</li></ul><p>这是空间维度的旋转，引导小王从别人的角度看这个问题：“如果我答应你，其他员工会怎么看？”“从公司的角度，你是这个岗位最合适的人选，你走了影响业务怎么办？”</p><p>有了这些考虑，如果经理不想换小王，也能让他明白为何如此决定。</p><ul><li>第五步：探究后果和影响，Examining Implications and Consequences.</li></ul><p>这是时间维度的展开，要考虑决策的后果：“如果你到了新部门，发现并没有想象中那么好，你怎么办？”“你愿意再坚持一下吗？接下来我们部门会有新项目，你不想试试吗？”</p><ul><li>第六步：反思提问本身（Questioning the Question)。</li></ul><p>这是最厉害的一步，是跳出问题看问题：“你说这个工作没意思，是因为它真没意思，还是因为你自己没有找到乐趣呢？”“会不会是你没有主动寻找挑战呢？”</p><p>也许小王真正需要的不是换部门，而是改变自己的心态。</p><h3 id="📚-案例二、"><a href="#📚-案例二、" class="headerlink" title="📚 案例二、"></a>📚 案例二、</h3><p>有家软件公司正在开发新产品，现在进度明显滞后，上级抱怨团队效率太低。</p><p>项目经理召开团队会议，用苏格拉底提问法进行分析。</p><ul><li>第一步：澄清问题</li></ul><p>项目经理问：“进度滞后到底是什么意思？是开发就超时了，还是测试环节出了问题？”</p><p>团队回答：“主要是开发用时比预期慢，连带测试也比预期更耗时。”</p><p>现在大家对“进度滞后”这个问题有了更明确的理解，不是模糊地抱怨了。</p><ul><li>第二步：探究假设</li></ul><p>经理问：“为什么说进度滞后是因为人员效率不高？有没有其他可能的原因？”</p><p>大家深入讨论后发现，其实不是程序员效率低，而是产品经理的需求变更太频繁。这就修改了最初的认识。</p><ul><li>第三步：挖掘证据</li></ul><p>经理进一步问：“有没有数据支持这个观点？”</p><p>团队整理了几个案例，发现一个月内需求变更了五次，每次都要花几天时间改代码，进度自然是一再拖延。</p><ul><li>第四步：考虑其他视角</li></ul><p>经理接着问：“我们能不能从产品经理和客户的角度想想，为什么需求总在调整呢？”</p><p>产品经理表示之所以不断修改需求，是因为希望产品能更好地符合市场反馈。</p><ul><li>第五步：讨论后果和影响</li></ul><p>经理问：“如果我们继续这样被动地应对市场变化，最终会发生什么？”</p><p>大家得出的结论是：项目会越来越不可控，团队会身心俱疲，产品肯定无法按时交付。</p><ul><li>第六步：反思问题本身</li></ul><p>到这里，人们意识到，问题的核心并不是团队效率，而是我们对产品的整体规划是否合理。</p><p>于是解决办法是深入洞察市场需求，变被动为主动，承担一定的风险先把产品做出来再说，以后有新需求以后再改。</p><p>如果不是这种有条理有步骤的提问法，团队很可能会陷入无意义的争吵，程序员抱怨产品经理，测试抱怨程序员，互相甩锅谁也找不到真正的解决方案。</p><p><strong>苏格拉底提问法的强大之处就在于它能把问题层层剥开，抓住本质，发现症状背后真正该解决的问题。</strong></p><h2 id="💡-个人思考"><a href="#💡-个人思考" class="headerlink" title="💡 个人思考"></a>💡 个人思考</h2><ol><li><p><strong>提问和争论并不是为了分出胜负，而是为了解决问题。往往你真正需要解决的，并不是一开始提出来的那个问题。那只是一个症状，而苏格拉底提问法通过层层追问能帮你发现病根。</strong></p></li><li><p><strong>解决问题就像搬山。</strong></p></li></ol><ul><li>澄清问题、探究假设和挖掘证据&#x2F;理由，是想让我们看清这座山到底是什么样子，分析它的内部结构，搞明白它是怎么支撑起来的。</li><li>考虑其他视角，就是其他人怎么看这座山的，也许你不喜欢但别人喜欢。</li><li>探究后果和影响，是考虑这座山未来可能的演化。你不动它，它会如何；你搬走了它，结果又会如何。</li><li>反思提问本身，则是重新思考，这座山真的对我们很重要吗？有没有更深成、更本质、更值得我们解决的问题？也许我们解决不了那个更本质的问题，山就不是问题了。</li></ul><ol start="3"><li><strong>完整版的苏格拉底提问法，是当今最强大的思维方法之一，最适合分析复杂的、不确定的、干系重大的难题。我们可以把这六个问题分成三类，对应初级、中级和高级三个层次的思维方式。</strong></li></ol><ul><li><p>初级是科研功夫。这一层的三个问题 —— 澄清问题、探究假设和挖掘证据 —— 这里是要像科学家一样，不是急着得出结论，先把情况摸清楚，有一分证据说一分话。很多问题一旦被分析透彻，就已经解决了。<strong>老百姓最容易犯的毛病就是没搞清楚状况胡思乱想。</strong></p></li><li><p>中级是战略功夫。这一层的两步 —— 考虑其他视角、探讨后果和影响，是从更高的维度权衡利弊，堪称老成谋国：不仅要考虑自己的立场，还要想想别人；不仅要考虑当前，还要预测未来演化。能做到这些，就可以说是合格的决策者。</p></li><li><p>高级，则是元认知功夫。这第六个问题 —— 反思问题本身，不仅是跳出了问题，也是跳出了场景，跳出了提问者自我：我为什么非得考虑这个问题？这个问题真的值得我解决吗？有没有一个更根本的问题，如果我解决了它，眼前的问题自然就迎刃而解了？这是绝对的高手层次，这样的人放在哪都不会犯糊涂。</p></li></ul><h2 id="🔗-相关链接"><a href="#🔗-相关链接" class="headerlink" title="🔗 相关链接"></a>🔗 相关链接</h2><ul><li>推荐阅读：<a href="/2025/10/11/5why-%E5%88%86%E6%9E%90%E6%B3%95/">笔记: 5why-分析法</a></li></ul><h2 id="📋-行动清单"><a href="#📋-行动清单" class="headerlink" title="📋 行动清单"></a>📋 行动清单</h2><ul><li>O： 养成用「苏格拉底提问法」思考问题的习惯<ol><li>增加案例到10个</li></ol></li></ul>]]></content>
    
    
    <summary type="html">苏格拉底提问法，Socratic Questioning是一套非常高级的批判性思维方法，提问者和被提问者都不知道答案的局面，提问是为了让双方共同探索、看清局势，进而寻找解决方案，追问和质疑是为了揭示我们默认观点中的矛盾和局限，从而后的领悟和启发。</summary>
    
    
    
    <category term="读书" scheme="https://zhifu-tech.github.io/categories/%E8%AF%BB%E4%B9%A6/"/>
    
    <category term="思考" scheme="https://zhifu-tech.github.io/categories/%E8%AF%BB%E4%B9%A6/%E6%80%9D%E8%80%83/"/>
    
    
    <category term="笔记" scheme="https://zhifu-tech.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="思维方法" scheme="https://zhifu-tech.github.io/tags/%E6%80%9D%E7%BB%B4%E6%96%B9%E6%B3%95/"/>
    
    <category term="万维钢-精英日课6" scheme="https://zhifu-tech.github.io/tags/%E4%B8%87%E7%BB%B4%E9%92%A2-%E7%B2%BE%E8%8B%B1%E6%97%A5%E8%AF%BE6/"/>
    
    <category term="万维钢-精英日课" scheme="https://zhifu-tech.github.io/tags/%E4%B8%87%E7%BB%B4%E9%92%A2-%E7%B2%BE%E8%8B%B1%E6%97%A5%E8%AF%BE/"/>
    
    <category term="万维钢" scheme="https://zhifu-tech.github.io/tags/%E4%B8%87%E7%BB%B4%E9%92%A2/"/>
    
    <category term="得到" scheme="https://zhifu-tech.github.io/tags/%E5%BE%97%E5%88%B0/"/>
    
    <category term="苏格拉底提问法" scheme="https://zhifu-tech.github.io/tags/%E8%8B%8F%E6%A0%BC%E6%8B%89%E5%BA%95%E6%8F%90%E9%97%AE%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>读书笔记: 万维钢-精英日课6-相信</title>
    <link href="https://zhifu-tech.github.io/2025/10/10/%E4%B8%87%E7%BB%B4%E9%92%A2-%E7%B2%BE%E8%8B%B1%E6%97%A5%E8%AF%BE6-%E7%9B%B8%E4%BF%A1/"/>
    <id>https://zhifu-tech.github.io/2025/10/10/%E4%B8%87%E7%BB%B4%E9%92%A2-%E7%B2%BE%E8%8B%B1%E6%97%A5%E8%AF%BE6-%E7%9B%B8%E4%BF%A1/</id>
    <published>2025-10-10T09:46:05.000Z</published>
    <updated>2025-10-17T08:25:55.593Z</updated>
    
    <content type="html"><![CDATA[<h2 id="📝-核心观点"><a href="#📝-核心观点" class="headerlink" title="📝 核心观点"></a>📝 核心观点</h2><ol><li>阐述的议题</li></ol><blockquote><p>如果我们从理性的角度，在接受一切科学事实的基础上，有没有可能还留下了一点缝隙，必须用宗教填补？</p></blockquote><ol start="2"><li><p><strong>也许立场并不重要，重要的是你配不配有立场！</strong></p></li><li><p>可能是中外老百姓看待信仰的观点：</p></li></ol><blockquote><p>国人：老板姓一般认为宗教信仰是一种个人选择：如果能够给我带来好处，比如佛祖能保佑我，那我就信；如果不能，那我就不信。\</p></blockquote><blockquote><p>外人：17世纪有个法国数学家叫帕斯卡，专门发明了一个理论，现在叫「帕斯卡的赌注（Pascal’s Wager）」，意思是哪怕上帝存在的概率不到100%，我们也应该选择信仰上帝，因为万一他存在，信仰的收益是无穷大的；就算他不存在，我信仰了，我过一种虔敬的生活，我也没啥大损失。</p></blockquote><ol start="4"><li><p>Religious belief is not just an option but an obligation. --Ross Douthat<br>「宗教信仰不只是一个选择，而是一个义务。」 ——罗斯·杜塞特</p></li><li><p><strong>这本书对我们的价值并不在于让你得出一个“信”或者“不信”的结论，而在于促使我们进行一场「智力体操」—— 摆事实讲道理，思辨科学世界观和宗教信仰的关系。</strong></p></li><li><p>你会意识到，如果一个人从未认真思考过我们接下来要讲的这些问题，他就根本没有资格说“信”或者“不信”</p></li><li><p>这所大学非常腐败，它用的那些课本都是二三流教授写的，不等于说是「微积分」是个假知识，也许只是没有教好、写好。</p></li><li><p><strong>换句话说，我们是不是不应该仅仅把世界视为一部冰冷的机器，是不是应该相信在世界的背后存在着某种更高的精神力量。</strong></p></li><li><p><strong>信仰宗教，其实是人的一种自然倾向，无神论才是后天教育和理性训练的结果。</strong></p></li><li><p>有些老板姓因为世界的无序性儿迷信神明，指望神明带给自己好运，而古代高级知识分子确却是因为看到了世界的有序而信神。因为他们知道，<strong>事情原本没有义务是这么好。</strong></p></li><li><p>声明的演化，原本是无序的。</p></li><li><p>道家「天地不仁以万物为刍狗」！<br>古代祭祀时用草扎成的狗。<br>《老子》:&quot;天地不仁﹐以万物为刍狗;圣人不仁﹐以百姓为刍狗。<br>&quot;魏源本义:&quot;结刍为狗﹐用之祭祀﹐既毕事则弃而践之。&quot;<br>《庄子．天运》:&quot;夫刍狗之未陈也﹐盛以箧衍﹐巾以文绣﹐尸祝斋戒以将之;及其已陈也﹐行者践其首脊﹐苏者取而爨之而已。&quot;<br>陆德明释文引李颐曰:&quot;刍狗﹐结刍为狗﹐巫祝用之。&quot;后因用以喻微贱无用的事物或言论。</p></li><li><p><em><strong>「科学的尽头是神学」</strong></em>。 牛顿、爱因斯坦和杨振宁没有否认上帝的存在，但是人家说的「上帝」或者说「造物主」，可不是宗教教义里那个人格化的神。他们说的其实是一个非人格化、非宗教的存在，也可以叫「大自然母亲」。</p></li><li><p>当代物理学家哦麦克斯&amp;泰格马克（Max Tegmark）的「数学宇宙假说（Mathemmatical Universe Hypothesis」: 一切都只不过是数学。我们的宇宙知识数学宇宙的一个可能性，我们的生活只不过是对数学可能性的一种展开。</p></li><li><p>多数人所谓的信教，其实是“灵则信” —— 去寺庙烧香许愿，说你帮我办个事儿，事成之后我给你捐钱……这种行为在任何宗教中都是愚蠢的。你这根本不是信仰，而是不理解不确定性，你不是信徒而是赌徒。</p></li><li><p>大脑的杏仁核负责识别强烈感情，海马体负责短期记忆，人在青春期容易冲动是因为前额叶皮质尚未发育成熟。</p></li><li><p>你为什么会有一个强烈的「我」的体验？「我」到底是什么？我不是我的身体，也不是我的某一个脑区，我到底是谁？</p></li></ol><p>18.「涌现（Emergence」，一个系统复杂度到一定程度，它会表现出某种整体性的性质，而这个性质无法用个部分的叠加来解释。</p><ol start="19"><li><p>意识是一种幻觉！简单说，我们日常所有的行为和决策，其实都是大脑机械的计算和执行，根本不需要意识；而意识只是作为旁观者、而且通常是在事后，产生的一种主观感受。这就好比你在观看自己人生的电影，你以为你是主导者，其实你只是个旁观者。你所谓的「自由意志」只是你对自己的安慰而已。</p></li><li><p>智能不等于意识。</p></li><li><p>如果一个事物非常不可靠，根本指望不上，你相信它和不相信，又有什么区别；反之，如果一个事物绝对可靠，如同物理定律那般运行，它到底上帝还是物理定律，又有什么区别。</p></li><li><p>就算我相信神，那也不一定非得入教啊，我当个散修不行吗？！</p></li><li><p>如果你承认精神世界的存在，你大约就会承认这个宇宙是有意义的。</p></li></ol><h2 id="💡-个人思考"><a href="#💡-个人思考" class="headerlink" title="💡 个人思考"></a>💡 个人思考</h2><ol><li><p><strong>对于某一个问题，如果一个人从未认真思考过，那么他就没有资格说三道四！</strong></p></li><li><p><strong>宗教或许是一种能够让人平静、平和的工具</strong></p></li><li><p><strong>能为我所用的，我信之；不能为我所用，我弃之！</strong></p></li><li><p><strong>如果一个事物非常不可靠，你相信它和不相信，又有什么区别；反之，如果一个事物绝对可靠，它到底是上帝还是物理定律，又有什么区别。</strong></p></li><li><p><strong>如果你“信仰”某种哲学，你就不是哲学家</strong>。很多哲学家都会坚持认为某一派哲学是对的，但这不叫信仰，这叫<strong>立场（position）。立场是建立在理性论证的基础之上，是可以接受质疑的，是允许修改的，而且还鼓励辩论。</strong></p></li><li><p>所谓意识形态，就是它能给你提供世界观、人生观和价值观的一揽子解决方案：咱这里啥都有，你不管做啥事儿都必须应该使用这里的精神指导，任何时候都不能忘了你是有信仰的人。</p></li><li><p>来自评论区：他对于历史的教学第一个方法就是书要从薄读到厚，再从厚读到薄。一本历史书你是一页页读，慢慢你就把内容都串联起来了，但是读的过程中要紧盯目录，那是你的地图。然后看着目录又能按照自己的方式回忆起内容来，然后有些你还要自己进行归纳总结。</p></li></ol><h2 id="🔗-相关链接"><a href="#🔗-相关链接" class="headerlink" title="🔗 相关链接"></a>🔗 相关链接</h2><ol><li><span class="exturl" data-url="aHR0cHM6Ly93d3cuZGVkYW8uY24vY291cnNlL2FydGljbGU/aWQ9V3FhdkRtMDEyR29sVjdPd1JNVnhQakV5OHpkazcz">得到课程链接<i class="fa fa-external-link-alt"></i></span></li></ol><h2 id="📋-行动清单"><a href="#📋-行动清单" class="headerlink" title="📋 行动清单"></a>📋 行动清单</h2>]]></content>
    
    
    <summary type="html">对于某一个问题，如果一个人从未认真思考过，那么他就没有资格说三道四！</summary>
    
    
    
    <category term="读书" scheme="https://zhifu-tech.github.io/categories/%E8%AF%BB%E4%B9%A6/"/>
    
    
    <category term="笔记" scheme="https://zhifu-tech.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="万维钢-精英日课6" scheme="https://zhifu-tech.github.io/tags/%E4%B8%87%E7%BB%B4%E9%92%A2-%E7%B2%BE%E8%8B%B1%E6%97%A5%E8%AF%BE6/"/>
    
    <category term="万维钢-精英日课" scheme="https://zhifu-tech.github.io/tags/%E4%B8%87%E7%BB%B4%E9%92%A2-%E7%B2%BE%E8%8B%B1%E6%97%A5%E8%AF%BE/"/>
    
    <category term="万维钢" scheme="https://zhifu-tech.github.io/tags/%E4%B8%87%E7%BB%B4%E9%92%A2/"/>
    
    <category term="得到" scheme="https://zhifu-tech.github.io/tags/%E5%BE%97%E5%88%B0/"/>
    
  </entry>
  
  <entry>
    <title>Hexo blog 部署指南</title>
    <link href="https://zhifu-tech.github.io/2025/10/09/hexo-blog-deplay-guide/"/>
    <id>https://zhifu-tech.github.io/2025/10/09/hexo-blog-deplay-guide/</id>
    <published>2025-10-09T15:35:23.000Z</published>
    <updated>2025-10-17T08:25:55.592Z</updated>
    
    <content type="html"><![CDATA[<h2 id="📋-概述"><a href="#📋-概述" class="headerlink" title="📋 概述"></a>📋 概述</h2><p>本项目支持三种部署方式，满足不同场景的需求：</p><ol><li><strong>本地 Docker 部署</strong> - 用于本地开发和调试</li><li><strong>远程（Server）Docker 部署</strong> - 用于生产环境部署</li><li><strong>GitHub Pages 自动化部署</strong> - 用于静态网站托管</li></ol><h2 id="🚀-快速开始"><a href="#🚀-快速开始" class="headerlink" title="🚀 快速开始"></a>🚀 快速开始</h2><p>所有操作都通过 <code>hexo.sh</code> 脚本进行，这是项目的<strong>唯一入口</strong>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看帮助信息</span></span><br><span class="line">./hexo.sh <span class="built_in">help</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 本地开发环境</span></span><br><span class="line">./hexo.sh dev</span><br><span class="line"></span><br><span class="line"><span class="comment"># 生产环境部署</span></span><br><span class="line">./hexo.sh build &amp;&amp; ./hexo.sh run</span><br></pre></td></tr></table></figure><h2 id="📋-目录"><a href="#📋-目录" class="headerlink" title="📋 目录"></a>📋 目录</h2><ul><li>[三种部署方式](#🏗️ 三种部署方式)</li><li>[项目结构](#🏗️ 项目结构)</li><li>[本地 Docker 部署](#🛠️ 本地 Docker 部署)</li><li>[远程 Docker 部署](#🏭 远程 Docker 部署)</li><li>[GitHub Pages 部署](#🌐 GitHub Pages 部署)</li><li>[hexo.sh 脚本使用](#h🔧 hexo.sh 脚本使用)</li><li>[故障排除](#🔍 故障排除)</li></ul><h2 id="🏗️-三种部署方式"><a href="#🏗️-三种部署方式" class="headerlink" title="🏗️ 三种部署方式"></a>🏗️ 三种部署方式</h2><h3 id="1-本地-Docker-部署"><a href="#1-本地-Docker-部署" class="headerlink" title="1. 本地 Docker 部署"></a>1. 本地 Docker 部署</h3><p><strong>用途</strong>: 本地开发和调试<br><strong>特点</strong>: 热重载、实时预览、开发调试<br><strong>命令</strong>: <code>./hexo.sh dev</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">graph LR</span><br><span class="line">    A[本地开发] --&gt; B[hexo.sh dev]</span><br><span class="line">    B --&gt; C[Docker 开发容器]</span><br><span class="line">    C --&gt; D[热重载服务器]</span><br><span class="line">    D --&gt; E[localhost:3000]</span><br></pre></td></tr></table></figure><p><strong>优势</strong>:</p><ul><li>✅ 实时文件监控和热重载</li><li>✅ 源代码挂载，修改即时生效</li><li>✅ 完整的开发调试环境</li><li>✅ 无需安装 Node.js 环境</li></ul><h3 id="2-远程（Server）Docker-部署"><a href="#2-远程（Server）Docker-部署" class="headerlink" title="2. 远程（Server）Docker 部署"></a>2. 远程（Server）Docker 部署</h3><p><strong>用途</strong>: 生产环境部署<br><strong>特点</strong>: 高性能、稳定可靠、生产就绪<br><strong>命令</strong>: <code>./hexo.sh build &amp;&amp; ./hexo.sh run</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">graph LR</span><br><span class="line">    A[服务器] --&gt; B[hexo.sh build]</span><br><span class="line">    B --&gt; C[Docker 生产镜像]</span><br><span class="line">    C --&gt; D[Nginx 服务器]</span><br><span class="line">    D --&gt; E[生产环境]</span><br></pre></td></tr></table></figure><p><strong>优势</strong>:</p><ul><li>✅ Nginx 高性能静态文件服务</li><li>✅ Gzip 压缩和缓存优化</li><li>✅ 健康检查和监控</li><li>✅ 容器化部署，易于管理</li></ul><h3 id="3-GitHub-Pages-自动化部署"><a href="#3-GitHub-Pages-自动化部署" class="headerlink" title="3. GitHub Pages 自动化部署"></a>3. GitHub Pages 自动化部署</h3><p><strong>用途</strong>: 静态网站托管<br><strong>特点</strong>: 自动化、免费、CDN 加速<br><strong>触发</strong>: 推送到 <code>main</code> 分支</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">graph LR</span><br><span class="line">    A[源码仓库] --&gt; B[GitHub Actions]</span><br><span class="line">    B --&gt; C[Node.js 环境]</span><br><span class="line">    C --&gt; D[生成静态文件]</span><br><span class="line">    D --&gt; E[部署仓库]</span><br><span class="line">    E --&gt; F[GitHub Pages]</span><br></pre></td></tr></table></figure><p><strong>优势</strong>:</p><ul><li>✅ 完全自动化部署</li><li>✅ 免费静态网站托管</li><li>✅ 全球 CDN 加速</li><li>✅ 与 GitHub 生态集成</li></ul><h2 id="🏗️-项目结构"><a href="#🏗️-项目结构" class="headerlink" title="🏗️ 项目结构"></a>🏗️ 项目结构</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">zhifu-tech/</span><br><span class="line">├── hexo.sh                         <span class="comment"># 统一管理脚本（唯一入口）</span></span><br><span class="line">├── docker-build.sh                 <span class="comment"># 原始脚本（已废弃，请使用 hexo.sh）</span></span><br><span class="line">├── .github/</span><br><span class="line">│   └── workflows/</span><br><span class="line">│       └── deployment.yml          <span class="comment"># GitHub Actions 工作流</span></span><br><span class="line">├── Dockerfile                      <span class="comment"># 生产环境镜像</span></span><br><span class="line">├── Dockerfile.dev                  <span class="comment"># 开发环境镜像</span></span><br><span class="line">├── docker-compose.yml              <span class="comment"># 容器编排配置</span></span><br><span class="line">├── nginx.conf                      <span class="comment"># Nginx 配置</span></span><br><span class="line">├── package.json                    <span class="comment"># Node.js 依赖配置</span></span><br><span class="line">├── _config.yml                     <span class="comment"># Hexo 配置文件</span></span><br><span class="line">├── _config.next.yml                <span class="comment"># Next 主题配置</span></span><br><span class="line">└── <span class="built_in">source</span>/                         <span class="comment"># 博客源码目录</span></span><br><span class="line">    └── _posts/                     <span class="comment"># 博客文章目录</span></span><br></pre></td></tr></table></figure><h2 id="🛠️-本地-Docker-部署"><a href="#🛠️-本地-Docker-部署" class="headerlink" title="🛠️ 本地 Docker 部署"></a>🛠️ 本地 Docker 部署</h2><h3 id="环境要求"><a href="#环境要求" class="headerlink" title="环境要求"></a>环境要求</h3><ul><li>Docker 20.10+</li><li>Docker Compose 2.0+</li></ul><h3 id="开发环境启动"><a href="#开发环境启动" class="headerlink" title="开发环境启动"></a>开发环境启动</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 启动开发环境（推荐）</span></span><br><span class="line">./hexo.sh dev</span><br><span class="line"></span><br><span class="line"><span class="comment"># 访问开发服务器</span></span><br><span class="line"><span class="comment"># http://localhost:3000</span></span><br></pre></td></tr></table></figure><h3 id="开发特性"><a href="#开发特性" class="headerlink" title="开发特性"></a>开发特性</h3><ul><li>✅ <strong>热重载</strong>: 修改源代码后自动刷新</li><li>✅ <strong>实时监控</strong>: 文件变化实时检测</li><li>✅ <strong>调试模式</strong>: 详细的调试信息输出</li><li>✅ <strong>源代码挂载</strong>: 本地修改即时生效</li></ul><h3 id="开发工作流"><a href="#开发工作流" class="headerlink" title="开发工作流"></a>开发工作流</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1. 启动开发环境</span></span><br><span class="line">./hexo.sh dev</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. 编辑文章（在 source/_posts/ 目录）</span></span><br><span class="line">vim <span class="built_in">source</span>/_posts/my-post.md</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3. 浏览器自动刷新显示最新内容</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 4. 停止开发环境</span></span><br><span class="line">./hexo.sh stop</span><br></pre></td></tr></table></figure><h2 id="🏭-远程-Docker-部署"><a href="#🏭-远程-Docker-部署" class="headerlink" title="🏭 远程 Docker 部署"></a>🏭 远程 Docker 部署</h2><h3 id="生产环境部署"><a href="#生产环境部署" class="headerlink" title="生产环境部署"></a>生产环境部署</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1. 构建生产镜像</span></span><br><span class="line">./hexo.sh build</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. 运行生产容器</span></span><br><span class="line">./hexo.sh run</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3. 访问生产环境</span></span><br><span class="line"><span class="comment"># http://localhost:4000</span></span><br></pre></td></tr></table></figure><h3 id="生产特性"><a href="#生产特性" class="headerlink" title="生产特性"></a>生产特性</h3><ul><li>✅ <strong>Nginx 服务器</strong>: 高性能静态文件服务</li><li>✅ <strong>Gzip 压缩</strong>: 减少传输大小</li><li>✅ <strong>静态缓存</strong>: 优化加载速度</li><li>✅ <strong>健康检查</strong>: 监控服务状态</li><li>✅ <strong>安全头</strong>: 增强安全性</li></ul><h3 id="服务器部署流程"><a href="#服务器部署流程" class="headerlink" title="服务器部署流程"></a>服务器部署流程</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1. 克隆项目</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/zhifu-tech/zhifu-tech.git</span><br><span class="line"><span class="built_in">cd</span> zhifu-tech</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. 赋予执行权限</span></span><br><span class="line"><span class="built_in">chmod</span> +x hexo.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3. 构建并运行</span></span><br><span class="line">./hexo.sh build &amp;&amp; ./hexo.sh run</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4. 配置反向代理（可选）</span></span><br><span class="line"><span class="comment"># 使用 Nginx 或 Apache 配置域名和 SSL</span></span><br></pre></td></tr></table></figure><h2 id="🌐-GitHub-Pages-部署"><a href="#🌐-GitHub-Pages-部署" class="headerlink" title="🌐 GitHub Pages 部署"></a>🌐 GitHub Pages 部署</h2><h3 id="双仓库架构"><a href="#双仓库架构" class="headerlink" title="双仓库架构"></a>双仓库架构</h3><p>本项目采用双仓库架构，这是 Hexo 博客部署的最佳实践：</p><h4 id="仓库说明"><a href="#仓库说明" class="headerlink" title="仓库说明"></a>仓库说明</h4><ol><li><p><strong>源码仓库</strong> (<code>zhifu-tech/zhifu-tech</code>)</p><ul><li>存放 Hexo 博客的源代码</li><li>包含 <code>_posts/</code>、<code>themes/</code>、<code>_config.yml</code> 等</li><li>用于版本控制和协作开发</li><li>触发 GitHub Actions 自动部署</li></ul></li><li><p><strong>部署仓库</strong> (<code>zhifu-tech/zhifu-tech.github.io</code>)</p><ul><li>存放 Hexo 生成的静态文件</li><li>自动启用 GitHub Pages 服务</li><li>通过 GitHub Actions 自动更新</li><li>用户访问的网站地址</li></ul></li></ol><h3 id="自动化部署流程"><a href="#自动化部署流程" class="headerlink" title="自动化部署流程"></a>自动化部署流程</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">graph LR</span><br><span class="line">    A[推送代码到 main 分支] --&gt; B[GitHub Actions 触发]</span><br><span class="line">    B --&gt; C[Node.js 20 环境]</span><br><span class="line">    C --&gt; D[安装依赖]</span><br><span class="line">    D --&gt; E[生成静态文件]</span><br><span class="line">    E --&gt; F[推送到部署仓库]</span><br><span class="line">    F --&gt; G[GitHub Pages 更新]</span><br><span class="line">    G --&gt; H[网站自动更新]</span><br></pre></td></tr></table></figure><h3 id="环境变量设置"><a href="#环境变量设置" class="headerlink" title="环境变量设置"></a>环境变量设置</h3><p>在 <strong>源码仓库</strong> (<code>zhifu-tech/zhifu-tech</code>) 中设置以下密钥：</p><ol><li>进入源码仓库 <strong>Settings</strong> → <strong>Secrets and variables</strong> → <strong>Actions</strong></li><li>添加以下密钥：</li></ol><table><thead><tr><th>密钥名称</th><th>描述</th><th>示例值</th></tr></thead><tbody><tr><td><code>GIT_EMAIL_BLOG</code></td><td>Git 邮箱地址</td><td><code>your-email@example.com</code></td></tr><tr><td><code>GH_TOKEN_BLOG</code></td><td>GitHub Personal Access Token</td><td><code>ghp_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx</code></td></tr></tbody></table><h3 id="创建-GitHub-Personal-Access-Token"><a href="#创建-GitHub-Personal-Access-Token" class="headerlink" title="创建 GitHub Personal Access Token"></a>创建 GitHub Personal Access Token</h3><ol><li>登录 GitHub → <strong>Settings</strong> → <strong>Developer settings</strong> → <strong>Personal access tokens</strong> → <strong>Tokens (classic)</strong></li><li>点击 <strong>Generate new token</strong> → <strong>Generate new token (classic)</strong></li><li>填写信息：<ul><li><strong>Note</strong>: <code>GitHub Actions Blog Deployment</code></li><li><strong>Expiration</strong>: 选择过期时间</li><li><strong>Scopes</strong>: 至少选择 <code>repo</code> 和 <code>workflow</code></li></ul></li><li>复制生成的 token 并保存</li></ol><h2 id="🔧-hexo-sh-脚本使用"><a href="#🔧-hexo-sh-脚本使用" class="headerlink" title="🔧 hexo.sh 脚本使用"></a>🔧 hexo.sh 脚本使用</h2><h3 id="脚本功能"><a href="#脚本功能" class="headerlink" title="脚本功能"></a>脚本功能</h3><p><code>hexo.sh</code> 是项目的<strong>唯一入口</strong>，提供以下功能：</p><table><thead><tr><th>命令</th><th>功能</th><th>说明</th></tr></thead><tbody><tr><td><code>./hexo.sh build</code></td><td>构建 Docker 镜像</td><td>构建生产和开发镜像</td></tr><tr><td><code>./hexo.sh run</code></td><td>运行生产环境</td><td>启动 Nginx 服务器</td></tr><tr><td><code>./hexo.sh dev</code></td><td>运行开发环境</td><td>启动热重载开发服务器</td></tr><tr><td><code>./hexo.sh stop</code></td><td>停止所有容器</td><td>停止运行中的容器</td></tr><tr><td><code>./hexo.sh clean</code></td><td>清理资源</td><td>清理容器和镜像</td></tr><tr><td><code>./hexo.sh status</code></td><td>查看状态</td><td>显示容器和镜像状态</td></tr><tr><td><code>./hexo.sh logs</code></td><td>查看日志</td><td>显示容器运行日志</td></tr><tr><td><code>./hexo.sh help</code></td><td>显示帮助</td><td>显示使用说明</td></tr></tbody></table><h3 id="常用操作"><a href="#常用操作" class="headerlink" title="常用操作"></a>常用操作</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 开发环境完整流程</span></span><br><span class="line">./hexo.sh dev                    <span class="comment"># 启动开发环境</span></span><br><span class="line"><span class="comment"># 编辑文章...</span></span><br><span class="line">./hexo.sh stop                   <span class="comment"># 停止开发环境</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 生产环境完整流程</span></span><br><span class="line">./hexo.sh build                  <span class="comment"># 构建镜像</span></span><br><span class="line">./hexo.sh run                    <span class="comment"># 启动生产环境</span></span><br><span class="line">./hexo.sh status                 <span class="comment"># 查看状态</span></span><br><span class="line">./hexo.sh logs                   <span class="comment"># 查看日志</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 清理和维护</span></span><br><span class="line">./hexo.sh stop                   <span class="comment"># 停止所有容器</span></span><br><span class="line">./hexo.sh clean                  <span class="comment"># 清理所有资源</span></span><br></pre></td></tr></table></figure><h3 id="手动-Docker-命令"><a href="#手动-Docker-命令" class="headerlink" title="手动 Docker 命令"></a>手动 Docker 命令</h3><p>如果需要在没有 <code>hexo.sh</code> 脚本的环境中使用，可以直接使用 Docker 命令：</p><h4 id="构建镜像"><a href="#构建镜像" class="headerlink" title="构建镜像"></a>构建镜像</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 构建生产镜像</span></span><br><span class="line">docker build -t zhifu-tech-blog:latest -f Dockerfile .</span><br><span class="line"></span><br><span class="line"><span class="comment"># 构建开发镜像</span></span><br><span class="line">docker build -t zhifu-tech-blog-dev:latest -f Dockerfile.dev .</span><br></pre></td></tr></table></figure><h4 id="运行容器"><a href="#运行容器" class="headerlink" title="运行容器"></a>运行容器</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 运行生产容器</span></span><br><span class="line">docker run -d \</span><br><span class="line">  --name zhifu-tech-blog \</span><br><span class="line">  -p 4000:80 \</span><br><span class="line">  --restart unless-stopped \</span><br><span class="line">  -e TZ=Asia/Shanghai \</span><br><span class="line">  -v $(<span class="built_in">pwd</span>)/logs/nginx:/var/log/nginx \</span><br><span class="line">  zhifu-tech-blog:latest</span><br><span class="line"></span><br><span class="line"><span class="comment"># 运行开发容器</span></span><br><span class="line">docker run -d \</span><br><span class="line">  --name zhifu-tech-blog-dev \</span><br><span class="line">  -p 3000:4000 \</span><br><span class="line">  --restart unless-stopped \</span><br><span class="line">  -e TZ=Asia/Shanghai \</span><br><span class="line">  -v $(<span class="built_in">pwd</span>)/source:/app/source \</span><br><span class="line">  -v $(<span class="built_in">pwd</span>)/themes:/app/themes \</span><br><span class="line">  -v $(<span class="built_in">pwd</span>)/_config.yml:/app/_config.yml \</span><br><span class="line">  -v $(<span class="built_in">pwd</span>)/_config.next.yml:/app/_config.next.yml \</span><br><span class="line">  zhifu-tech-blog-dev:latest</span><br></pre></td></tr></table></figure><h3 id="端口说明"><a href="#端口说明" class="headerlink" title="端口说明"></a>端口说明</h3><table><thead><tr><th>环境</th><th>容器端口</th><th>主机端口</th><th>访问地址</th></tr></thead><tbody><tr><td>开发环境</td><td>4000</td><td>3000</td><td><span class="exturl" data-url="aHR0cDovL2xvY2FsaG9zdDozMDAwLw==">http://localhost:3000<i class="fa fa-external-link-alt"></i></span></td></tr><tr><td>生产环境</td><td>80</td><td>4000</td><td><span class="exturl" data-url="aHR0cDovL2xvY2FsaG9zdDo0MDAwLw==">http://localhost:4000<i class="fa fa-external-link-alt"></i></span></td></tr></tbody></table><h2 id="🔍-故障排除"><a href="#🔍-故障排除" class="headerlink" title="🔍 故障排除"></a>🔍 故障排除</h2><h3 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h3><h4 id="1-权限问题"><a href="#1-权限问题" class="headerlink" title="1. 权限问题"></a>1. 权限问题</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 赋予执行权限</span></span><br><span class="line"><span class="built_in">chmod</span> +x hexo.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查权限</span></span><br><span class="line"><span class="built_in">ls</span> -la hexo.sh</span><br></pre></td></tr></table></figure><h4 id="2-Docker-未安装"><a href="#2-Docker-未安装" class="headerlink" title="2. Docker 未安装"></a>2. Docker 未安装</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Ubuntu/Debian</span></span><br><span class="line"><span class="built_in">sudo</span> apt update</span><br><span class="line"><span class="built_in">sudo</span> apt install docker.io docker-compose</span><br><span class="line"></span><br><span class="line"><span class="comment"># CentOS/RHEL</span></span><br><span class="line"><span class="built_in">sudo</span> yum install docker docker-compose</span><br><span class="line"></span><br><span class="line"><span class="comment"># macOS</span></span><br><span class="line">brew install docker docker-compose</span><br></pre></td></tr></table></figure><h4 id="3-端口冲突"><a href="#3-端口冲突" class="headerlink" title="3. 端口冲突"></a>3. 端口冲突</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 检查端口占用</span></span><br><span class="line">netstat -tulpn | grep :4000</span><br><span class="line">netstat -tulpn | grep :3000</span><br><span class="line"></span><br><span class="line"><span class="comment"># 停止占用端口的进程</span></span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">kill</span> -9 &lt;PID&gt;</span><br></pre></td></tr></table></figure><h4 id="4-容器启动失败"><a href="#4-容器启动失败" class="headerlink" title="4. 容器启动失败"></a>4. 容器启动失败</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看详细日志</span></span><br><span class="line">./hexo.sh logs</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查容器状态</span></span><br><span class="line">./hexo.sh status</span><br><span class="line"></span><br><span class="line"><span class="comment"># 清理并重新构建</span></span><br><span class="line">./hexo.sh clean</span><br><span class="line">./hexo.sh build</span><br></pre></td></tr></table></figure><h4 id="5-端口被占用错误"><a href="#5-端口被占用错误" class="headerlink" title="5. 端口被占用错误"></a>5. 端口被占用错误</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 错误信息: ports are not available: exposing port TCP 0.0.0.0:4000 -&gt; 127.0.0.1:0: listen tcp 0.0.0.0:4000: bind: address already in use</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查端口占用</span></span><br><span class="line">lsof -i :4000</span><br><span class="line">lsof -i :3000</span><br><span class="line"></span><br><span class="line"><span class="comment"># 终止占用端口的进程</span></span><br><span class="line"><span class="built_in">kill</span> &lt;PID&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 或者使用不同端口</span></span><br><span class="line">docker run -p 8080:80 zhifu-tech-blog:latest</span><br></pre></td></tr></table></figure><h4 id="6-Hexo-8-0-0-ESM-兼容性问题"><a href="#6-Hexo-8-0-0-ESM-兼容性问题" class="headerlink" title="6. Hexo 8.0.0 ESM 兼容性问题"></a>6. Hexo 8.0.0 ESM 兼容性问题</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 问题: Error [ERR_REQUIRE_ESM]: require() of ES Module</span></span><br><span class="line"><span class="comment"># 解决: 已通过升级到 Node.js 20 解决</span></span><br><span class="line"><span class="comment"># 确保使用 node:20-alpine 基础镜像</span></span><br></pre></td></tr></table></figure><h4 id="7-GitHub-Pages-部署失败"><a href="#7-GitHub-Pages-部署失败" class="headerlink" title="7. GitHub Pages 部署失败"></a>7. GitHub Pages 部署失败</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 检查 GitHub Actions 日志</span></span><br><span class="line"><span class="comment"># 在 GitHub 仓库的 Actions 页面查看详细日志</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 验证环境变量设置</span></span><br><span class="line"><span class="comment"># 确保 GIT_EMAIL_BLOG 和 GH_TOKEN_BLOG 已正确设置</span></span><br></pre></td></tr></table></figure><h4 id="8-页面样式异常或未见最新内容"><a href="#8-页面样式异常或未见最新内容" class="headerlink" title="8. 页面样式异常或未见最新内容"></a>8. 页面样式异常或未见最新内容</h4><p>有时浏览器缓存可能导致页面显示异常或者无法看到最新内容更新。请尝试<strong>清除浏览器缓存</strong>后重新加载页面：</p><ul><li>Windows：按下 <kbd>Ctrl</kbd> + <kbd>F5</kbd></li><li>Mac：按下 <kbd>Cmd</kbd> + <kbd>Shift</kbd> + <kbd>R</kbd></li></ul><p>若问题仍未解决，可尝试更换浏览器或清理浏览器缓存后再次访问。</p><h3 id="调试命令"><a href="#调试命令" class="headerlink" title="调试命令"></a>调试命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看容器详细信息</span></span><br><span class="line">docker inspect zhifu-tech-blog</span><br><span class="line"></span><br><span class="line"><span class="comment"># 进入运行中的容器</span></span><br><span class="line">docker <span class="built_in">exec</span> -it zhifu-tech-blog sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看容器资源使用</span></span><br><span class="line">docker stats zhifu-tech-blog</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看镜像大小</span></span><br><span class="line">docker images zhifu-tech-blog</span><br><span class="line"></span><br><span class="line"><span class="comment"># 清理 Docker 缓存</span></span><br><span class="line">docker system prune -a</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看特定时间的日志</span></span><br><span class="line">docker logs --since <span class="string">&quot;2024-01-01T00:00:00&quot;</span> zhifu-tech-blog</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看最近的日志</span></span><br><span class="line">docker logs --<span class="built_in">tail</span> 100 zhifu-tech-blog</span><br></pre></td></tr></table></figure><h2 id="📊-性能优化"><a href="#📊-性能优化" class="headerlink" title="📊 性能优化"></a>📊 性能优化</h2><h3 id="Docker-镜像优化"><a href="#Docker-镜像优化" class="headerlink" title="Docker 镜像优化"></a>Docker 镜像优化</h3><ul><li>使用多阶段构建减少镜像大小</li><li>使用 Alpine Linux 基础镜像</li><li>配置 npm 镜像源加速安装</li><li>生产镜像大小: ~50MB</li><li>开发镜像大小: ~240MB</li></ul><h3 id="运行时优化"><a href="#运行时优化" class="headerlink" title="运行时优化"></a>运行时优化</h3><ul><li>配置 Nginx 缓存策略</li><li>启用 Gzip 压缩</li><li>设置合适的 worker 进程数</li><li>配置日志轮转</li></ul><h2 id="🔒-安全配置"><a href="#🔒-安全配置" class="headerlink" title="🔒 安全配置"></a>🔒 安全配置</h2><h3 id="容器安全"><a href="#容器安全" class="headerlink" title="容器安全"></a>容器安全</h3><ul><li>使用非 root 用户运行</li><li>设置适当的文件权限</li><li>配置安全头</li><li>限制容器资源使用</li></ul><h3 id="网络安全"><a href="#网络安全" class="headerlink" title="网络安全"></a>网络安全</h3><ul><li>只暴露必要端口</li><li>配置防火墙规则</li><li>使用 HTTPS（生产环境）</li><li>定期更新基础镜像</li></ul><h2 id="📈-监控和维护"><a href="#📈-监控和维护" class="headerlink" title="📈 监控和维护"></a>📈 监控和维护</h2><h3 id="健康检查"><a href="#健康检查" class="headerlink" title="健康检查"></a>健康检查</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 检查容器健康状态</span></span><br><span class="line">docker inspect --format=<span class="string">&#x27;&#123;&#123;.State.Health.Status&#125;&#125;&#x27;</span> zhifu-tech-blog</span><br><span class="line"></span><br><span class="line"><span class="comment"># 手动健康检查</span></span><br><span class="line">curl http://localhost:4000/health</span><br></pre></td></tr></table></figure><h3 id="日志管理"><a href="#日志管理" class="headerlink" title="日志管理"></a>日志管理</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看实时日志</span></span><br><span class="line">./hexo.sh logs</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看最近的日志</span></span><br><span class="line">docker logs --<span class="built_in">tail</span> 100 zhifu-tech-blog</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置日志轮转</span></span><br><span class="line"><span class="comment"># 在 docker-compose.yml 中添加：</span></span><br><span class="line">logging:</span><br><span class="line">  driver: <span class="string">&quot;json-file&quot;</span></span><br><span class="line">  options:</span><br><span class="line">    max-size: <span class="string">&quot;10m&quot;</span></span><br><span class="line">    max-file: <span class="string">&quot;3&quot;</span></span><br></pre></td></tr></table></figure><h3 id="备份和恢复"><a href="#备份和恢复" class="headerlink" title="备份和恢复"></a>备份和恢复</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 备份容器数据</span></span><br><span class="line">docker <span class="built_in">cp</span> zhifu-tech-blog:/usr/share/nginx/html ./backup/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 恢复数据</span></span><br><span class="line">docker <span class="built_in">cp</span> ./backup/ zhifu-tech-blog:/usr/share/nginx/html</span><br></pre></td></tr></table></figure><h2 id="📚-相关资源"><a href="#📚-相关资源" class="headerlink" title="📚 相关资源"></a>📚 相关资源</h2><ul><li><span class="exturl" data-url="aHR0cHM6Ly9kb2NzLmRvY2tlci5jb20v">Docker 官方文档<i class="fa fa-external-link-alt"></i></span></li><li><span class="exturl" data-url="aHR0cHM6Ly9uZ2lueC5vcmcvZW4vZG9jcy8=">Nginx 配置指南<i class="fa fa-external-link-alt"></i></span></li><li><span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL2RvY3Mv">Hexo 官方文档<i class="fa fa-external-link-alt"></i></span></li><li><span class="exturl" data-url="aHR0cHM6Ly90aGVtZS1uZXh0LmpzLm9yZy8=">NexT 主题文档<i class="fa fa-external-link-alt"></i></span></li><li><span class="exturl" data-url="aHR0cHM6Ly9kb2NzLmdpdGh1Yi5jb20vZW4vYWN0aW9ucw==">GitHub Actions 文档<i class="fa fa-external-link-alt"></i></span></li></ul><h2 id="🤝-贡献"><a href="#🤝-贡献" class="headerlink" title="🤝 贡献"></a>🤝 贡献</h2><p>欢迎提交 Issue 和 Pull Request 来改进这个部署方案！</p><h2 id="📄-许可证"><a href="#📄-许可证" class="headerlink" title="📄 许可证"></a>📄 许可证</h2><p>本项目采用 MIT 许可证。详见 <a href="LICENSE">LICENSE</a> 文件。</p><hr><h2 id="🎯-快速参考"><a href="#🎯-快速参考" class="headerlink" title="🎯 快速参考"></a>🎯 快速参考</h2><h3 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 一键启动开发环境</span></span><br><span class="line">./hexo.sh dev</span><br><span class="line"></span><br><span class="line"><span class="comment"># 一键启动生产环境</span></span><br><span class="line">./hexo.sh build &amp;&amp; ./hexo.sh run</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看所有容器状态</span></span><br><span class="line">./hexo.sh status</span><br><span class="line"></span><br><span class="line"><span class="comment"># 停止所有容器</span></span><br><span class="line">./hexo.sh stop</span><br><span class="line"></span><br><span class="line"><span class="comment"># 清理所有资源</span></span><br><span class="line">./hexo.sh clean</span><br></pre></td></tr></table></figure><h3 id="访问地址"><a href="#访问地址" class="headerlink" title="访问地址"></a>访问地址</h3><ul><li><strong>开发环境</strong>: <span class="exturl" data-url="aHR0cDovL2xvY2FsaG9zdDozMDAwLw==">http://localhost:3000<i class="fa fa-external-link-alt"></i></span></li><li><strong>生产环境</strong>: <span class="exturl" data-url="aHR0cDovL2xvY2FsaG9zdDo0MDAwLw==">http://localhost:4000<i class="fa fa-external-link-alt"></i></span></li><li><strong>GitHub Pages</strong>: <a href="https://zhifu-tech.github.io/">https://zhifu-tech.github.io</a></li><li><strong>健康检查</strong>: <span class="exturl" data-url="aHR0cDovL2xvY2FsaG9zdDo0MDAwL2hlYWx0aA==">http://localhost:4000/health<i class="fa fa-external-link-alt"></i></span></li></ul><hr><p><strong>维护者</strong>: zhifu <span class="exturl" data-url="bWFpbHRvOiYjMTIyOyYjeDdhOyYjMTAyOyYjeDJlOyYjMTAzOyYjeDY1OyYjMTExOyYjeDcyOyYjeDY3OyYjMTAxOyYjeDJlOyYjOTc7JiMxMDU7JiM2NDsmI3g2NzsmI3g2ZDsmI3g2MTsmIzEwNTsmI3g2YzsmI3gyZTsmI3g2MzsmIzExMTsmI3g2ZDs=">zzf.george.ai@gmail.com<i class="fa fa-external-link-alt"></i></span><br><strong>最后更新</strong>: 2025-01-09<br><strong>版本</strong>: v2.0.0 (统一 hexo.sh 入口，支持三种部署方式)</p>]]></content>
    
    
    <summary type="html">本项目支持三种部署方式，满足不同场景的需求:本地、远程和github pages</summary>
    
    
    
    <category term="技术" scheme="https://zhifu-tech.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="工具" scheme="https://zhifu-tech.github.io/categories/%E6%8A%80%E6%9C%AF/%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="博客维护" scheme="https://zhifu-tech.github.io/tags/%E5%8D%9A%E5%AE%A2%E7%BB%B4%E6%8A%A4/"/>
    
    <category term="hexo" scheme="https://zhifu-tech.github.io/tags/hexo/"/>
    
    <category term="deploy" scheme="https://zhifu-tech.github.io/tags/deploy/"/>
    
  </entry>
  
  <entry>
    <title>关于 Logo</title>
    <link href="https://zhifu-tech.github.io/2025/10/09/about-logo/"/>
    <id>https://zhifu-tech.github.io/2025/10/09/about-logo/</id>
    <published>2025-10-09T15:26:37.000Z</published>
    <updated>2025-10-17T08:25:55.592Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/../images/zhifu-tech-logo.svg" alt="zhifu-tech-logo" loading="lazy"></p><h2 id="🎨-Logo设计解析"><a href="#🎨-Logo设计解析" class="headerlink" title="🎨 Logo设计解析"></a>🎨 Logo设计解析</h2><h3 id="整体风格"><a href="#整体风格" class="headerlink" title="整体风格"></a><strong>整体风格</strong></h3><p>这是一个<strong>Matrix风格</strong>的科技logo，采用了经典的赛博朋克美学，以深蓝色为主色调营造未来科技感。</p><h3 id="核心元素"><a href="#核心元素" class="headerlink" title="核心元素"></a><strong>核心元素</strong></h3><h4 id="1-背景设计"><a href="#1-背景设计" class="headerlink" title="1. 背景设计"></a>1. <strong>背景设计</strong></h4><ul><li><strong>深蓝色背景</strong> (#000011) - 营造深邃的科技感</li><li><strong>网格图案</strong> - 细密的Matrix风格网格，增强数字世界感</li><li><strong>数字雨效果</strong> - 背景有&quot;1&quot;和&quot;0&quot;的数字雨滴，模拟Matrix电影中的代码雨</li><li><strong>扫描线</strong> - 动态的扫描线效果，增加科技动感</li></ul><h4 id="2-圆形结构"><a href="#2-圆形结构" class="headerlink" title="2. 圆形结构"></a>2. <strong>圆形结构</strong></h4><ul><li><strong>主圆形</strong> - 半径400px的蓝色发光圆环，作为主要框架</li><li><strong>装饰圆环</strong> - 三个同心圆环，营造层次感和深度</li><li><strong>发光效果</strong> - 所有圆形都有蓝色光晕，增强科技感</li></ul><h4 id="3-文字设计"><a href="#3-文字设计" class="headerlink" title="3. 文字设计"></a>3. <strong>文字设计</strong></h4><ul><li><strong>&quot;T&quot;字母</strong> - 位于圆的中心点，使用等宽字体(monospace)</li><li><strong>蓝色发光</strong> - 文字有蓝色光晕效果</li><li><strong>180px字体</strong> - 大号粗体，突出品牌标识</li></ul><h4 id="4-装饰元素"><a href="#4-装饰元素" class="headerlink" title="4. 装饰元素"></a>4. <strong>装饰元素</strong></h4><ul><li><strong>十字装饰线</strong> - 四个方向的装饰线条，增强科技感</li><li><strong>角落装饰</strong> - 四个角落的三角形装饰，增加细节</li><li><strong>二进制代码</strong> - 上下方的&quot;01001000&quot;和&quot;01110100&quot;装饰</li><li><strong>闪烁点</strong> - 四个角落的圆点会以不同频率闪烁</li></ul><h4 id="5-动画效果"><a href="#5-动画效果" class="headerlink" title="5. 动画效果"></a>5. <strong>动画效果</strong></h4><ul><li><strong>扫描线动画</strong> - 水平扫描线从上到下移动</li><li><strong>闪烁效果</strong> - 装饰点会闪烁，增加动态感</li><li><strong>发光效果</strong> - 所有元素都有蓝色光晕</li></ul><h3 id="设计理念"><a href="#设计理念" class="headerlink" title="设计理念"></a><strong>设计理念</strong></h3><p>这个logo完美融合了：</p><ul><li><strong>科技感</strong> - Matrix风格和数字元素</li><li><strong>现代感</strong> - 蓝色主题和发光效果</li><li><strong>品牌识别</strong> - 简洁的&quot;T&quot;字母作为核心标识</li><li><strong>视觉冲击</strong> - 动画效果和发光设计</li></ul><p>整体设计非常适合科技公司、游戏公司或任何需要展现创新和未来感的品牌使用。</p><h2 id="文字效果"><a href="#文字效果" class="headerlink" title="文字效果"></a>文字效果</h2><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"> _____  _   _   ___   _____   _   _       _____   _____    ____   _   _ </span><br><span class="line">|__  / | | | | |_ _| |  ___| | | | |  _  |_   _| | ____|  / ___| | | | |</span><br><span class="line">  / /  | |_| |  | |  | |_    | | | | (_)   | |   |  _|   | |     | |_| |</span><br><span class="line"> / /_  |  _  |  | |  |  _|   | |_| |       | |   | |___  | |___  |  _  |</span><br><span class="line">/____| |_| |_| |___| |_|      \___/        |_|   |_____|  \____| |_| |_|</span><br><span class="line">                                                                        </span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">这是一个**Matrix风格**的科技logo，采用了经典的赛博朋克美学，以深蓝色为主色调营造未来科技感。</summary>
    
    
    
    <category term="设计" scheme="https://zhifu-tech.github.io/categories/%E8%AE%BE%E8%AE%A1/"/>
    
    
    <category term="logo" scheme="https://zhifu-tech.github.io/tags/logo/"/>
    
  </entry>
  
  <entry>
    <title>欢迎来到我的博客</title>
    <link href="https://zhifu-tech.github.io/2025/10/09/welcome/"/>
    <id>https://zhifu-tech.github.io/2025/10/09/welcome/</id>
    <published>2025-10-09T00:51:53.000Z</published>
    <updated>2025-10-17T08:25:55.592Z</updated>
    
    <content type="html"><![CDATA[<p>在我的博客世界里，生活的点滴被温柔地记录下来，每一个字，每一张图片，都是我生活的一部分，也是我与世界对话的方式。这里是一个充满正能量和启发的空间，我分享着我的成长、我的喜悦、我的感悟。</p><h2 id="生活的记录与分享"><a href="#生活的记录与分享" class="headerlink" title="生活的记录与分享"></a>生活的记录与分享</h2><p>在博客的文字里，你会发现我的日常故事，或是一杯清晨的咖啡带来的启示，亦或是一次偶遇带来的意外惊喜。我喜欢用生活中的点滴来丰富我的博客，因为我相信，正是这些平凡而真实的瞬间，构成了我独特的生活体验。</p><h2 id="思考的空间"><a href="#思考的空间" class="headerlink" title="思考的空间"></a>思考的空间</h2><p>我的博客也是我的思考空间，我会分享我对世界的观察和理解，记录下我对生活、对人性、对未来的种种思考。我希望我的文字能够给人带来：</p><ul><li>一丝温暖</li><li>一点启发  </li><li>一份勇气</li></ul><p>让每一个来到这里的人都感受到生活的美好和可能性。</p><h2 id="共同成长"><a href="#共同成长" class="headerlink" title="共同成长"></a>共同成长</h2><p>在这个博客里，我们是一家人，无论你是从何而来，身处何地，我们都可以在这里相遇，分享彼此的故事，携手走过人生的每一段旅程。</p><blockquote><p>这里不仅是我记录生活的地方，更是我与你们分享生活的平台。愿我们在这片文字的海洋里，共同感受生命的温暖，共同品味生活的美好。</p></blockquote><hr><p><em>感谢您的阅读，期待与您分享更多精彩内容！</em></p>]]></content>
    
    
    <summary type="html">给自己一个思考和记录的空间！</summary>
    
    
    
    <category term="生活" scheme="https://zhifu-tech.github.io/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
    <category term="博客" scheme="https://zhifu-tech.github.io/tags/%E5%8D%9A%E5%AE%A2/"/>
    
    <category term="生活" scheme="https://zhifu-tech.github.io/tags/%E7%94%9F%E6%B4%BB/"/>
    
    <category term="分享" scheme="https://zhifu-tech.github.io/tags/%E5%88%86%E4%BA%AB/"/>
    
  </entry>
  
  <entry>
    <title>算法-第4版</title>
    <link href="https://zhifu-tech.github.io/2025/01/15/%E7%AE%97%E6%B3%95-%E7%AC%AC4%E7%89%88/"/>
    <id>https://zhifu-tech.github.io/2025/01/15/%E7%AE%97%E6%B3%95-%E7%AC%AC4%E7%89%88/</id>
    <published>2025-01-15T02:00:00.000Z</published>
    <updated>2025-10-17T08:25:55.593Z</updated>
    
    <content type="html"><![CDATA[<h2 id="📚-关于本书"><a href="#📚-关于本书" class="headerlink" title="📚 关于本书"></a>📚 关于本书</h2><p>《算法-第4版》是计算机科学领域的经典教材，由Robert Sedgewick和Kevin Wayne编写。这本书全面介绍了计算机算法和数据结构，是学习算法和编程的必读之作。</p><h3 id="作者简介"><a href="#作者简介" class="headerlink" title="作者简介"></a>作者简介</h3><ul><li><strong>Robert Sedgewick</strong>：普林斯顿大学计算机科学系教授，算法领域的权威专家</li><li><strong>Kevin Wayne</strong>：普林斯顿大学计算机科学系高级讲师，专注于算法教学</li></ul><h3 id="书籍特色"><a href="#书籍特色" class="headerlink" title="书籍特色"></a>书籍特色</h3><ul><li><strong>内容全面</strong>：涵盖基础数据结构到高级算法设计</li><li><strong>实例丰富</strong>：大量实际应用案例和练习题</li><li><strong>循序渐进</strong>：从基础概念到复杂算法的完整学习路径</li><li><strong>实用性强</strong>：注重算法的实际应用和性能分析</li></ul><h2 id="📖-在线阅读《算法-第4版》"><a href="#📖-在线阅读《算法-第4版》" class="headerlink" title="📖 在线阅读《算法-第4版》"></a><span class="exturl" data-url="aHR0cHM6Ly95dW4ud2VpY2hlbmcubWVuL0Jvb2svJUU3JUFFJTk3JUU2JUIzJTk1LiVFNyVBQyVBQzQlRTclODklODgucGRm">📖 在线阅读《算法-第4版》<i class="fa fa-external-link-alt"></i></span></h2><h2 id="📋-主要内容"><a href="#📋-主要内容" class="headerlink" title="📋 主要内容"></a>📋 主要内容</h2><h3 id="核心章节"><a href="#核心章节" class="headerlink" title="核心章节"></a>核心章节</h3><ul><li><strong>基础数据结构</strong>：栈、队列、链表、树、图等</li><li><strong>排序算法</strong>：快速排序、归并排序、堆排序等</li><li><strong>查找算法</strong>：二分查找、哈希表、平衡树等</li><li><strong>图算法</strong>：深度优先搜索、广度优先搜索、最短路径等</li><li><strong>字符串算法</strong>：KMP算法、正则表达式等</li></ul><h3 id="适用人群"><a href="#适用人群" class="headerlink" title="适用人群"></a>适用人群</h3><ul><li>计算机科学专业学生</li><li>软件工程师和程序员</li><li>算法竞赛参与者</li><li>对算法感兴趣的读者</li></ul><h2 id="💡-学习建议"><a href="#💡-学习建议" class="headerlink" title="💡 学习建议"></a>💡 学习建议</h2><h3 id="阅读方法"><a href="#阅读方法" class="headerlink" title="阅读方法"></a>阅读方法</h3><ol><li><strong>循序渐进</strong>：按照章节顺序阅读，不要跳跃</li><li><strong>动手实践</strong>：每章都有练习题，建议动手实现</li><li><strong>做笔记</strong>：在重要概念处做标记和笔记</li><li><strong>定期复习</strong>：算法需要反复练习才能掌握</li></ol><h3 id="学习策略"><a href="#学习策略" class="headerlink" title="学习策略"></a>学习策略</h3><ol><li><strong>理论结合实践</strong>：理解算法原理后立即编程实现</li><li><strong>多做练习</strong>：通过大量练习加深对算法的理解</li><li><strong>分析复杂度</strong>：学会分析算法的时间和空间复杂度</li><li><strong>应用导向</strong>：关注算法在实际问题中的应用</li></ol><h2 id="📝-学习计划"><a href="#📝-学习计划" class="headerlink" title="📝 学习计划"></a>📝 学习计划</h2><h3 id="📊-建议学习进度"><a href="#📊-建议学习进度" class="headerlink" title="📊 建议学习进度"></a>📊 建议学习进度</h3><p>本书共约700页，建议按以下计划学习：</p><ul><li><strong>第1-2周</strong>：基础数据结构（第1-3章）</li><li><strong>第3-4周</strong>：排序算法（第4-5章）</li><li><strong>第5-6周</strong>：查找算法（第6-7章）</li><li><strong>第7-8周</strong>：图算法（第8-9章）</li><li><strong>第9-10周</strong>：字符串算法（第10章）</li></ul><h2 id="🎯-学习目标"><a href="#🎯-学习目标" class="headerlink" title="🎯 学习目标"></a>🎯 学习目标</h2><p>通过阅读本书，您将能够：</p><ul><li>掌握常用数据结构和算法</li><li>理解算法的时间复杂度和空间复杂度</li><li>学会分析和设计高效算法</li><li>提高编程和问题解决能力</li><li>为算法竞赛和面试做好准备</li></ul><hr><h2 id="📒-笔记"><a href="#📒-笔记" class="headerlink" title="📒 笔记"></a>📒 笔记</h2>]]></content>
    
    
    <summary type="html">《算法-第4版》经典教材在线阅读，Robert Sedgewick和Kevin Wayne著</summary>
    
    
    
    <category term="读书" scheme="https://zhifu-tech.github.io/categories/%E8%AF%BB%E4%B9%A6/"/>
    
    
    <category term="笔记" scheme="https://zhifu-tech.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="学习" scheme="https://zhifu-tech.github.io/tags/%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="算法" scheme="https://zhifu-tech.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="计算机科学" scheme="https://zhifu-tech.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/"/>
    
    <category term="经典教材" scheme="https://zhifu-tech.github.io/tags/%E7%BB%8F%E5%85%B8%E6%95%99%E6%9D%90/"/>
    
  </entry>
  
</feed>
